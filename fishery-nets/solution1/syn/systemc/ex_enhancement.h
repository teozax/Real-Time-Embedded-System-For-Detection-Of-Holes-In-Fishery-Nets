// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _ex_enhancement_HH_
#define _ex_enhancement_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "transform_data.h"
#include "guidedfilter204.h"
#include "fifo_w32_d2_A.h"
#include "start_for_guidedfcXB.h"

namespace ap_rtl {

struct ex_enhancement : public sc_module {
    // Port declarations 19
    sc_in< sc_lv<8> > inputImage_data_stream_0_V_dout;
    sc_in< sc_logic > inputImage_data_stream_0_V_empty_n;
    sc_out< sc_logic > inputImage_data_stream_0_V_read;
    sc_in< sc_lv<8> > inputImage_data_stream_1_V_dout;
    sc_in< sc_logic > inputImage_data_stream_1_V_empty_n;
    sc_out< sc_logic > inputImage_data_stream_1_V_read;
    sc_in< sc_lv<8> > inputImage_data_stream_2_V_dout;
    sc_in< sc_logic > inputImage_data_stream_2_V_empty_n;
    sc_out< sc_logic > inputImage_data_stream_2_V_read;
    sc_out< sc_lv<16> > I_enhanced_data_stream_V_din;
    sc_in< sc_logic > I_enhanced_data_stream_V_full_n;
    sc_out< sc_logic > I_enhanced_data_stream_V_write;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > ap_idle;
    sc_in< sc_logic > ap_continue;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    ex_enhancement(sc_module_name name);
    SC_HAS_PROCESS(ex_enhancement);

    ~ex_enhancement();

    sc_trace_file* mVcdFile;

    transform_data* transform_data_U0;
    guidedfilter204* guidedfilter204_U0;
    fifo_w32_d2_A* I_V_V_U;
    fifo_w32_d2_A* I_COPY_V_V_U;
    fifo_w32_d2_A* I_2_V_V_U;
    fifo_w32_d2_A* ONES_V_V_U;
    start_for_guidedfcXB* start_for_guidedfcXB_U;
    sc_signal< sc_logic > transform_data_U0_ap_start;
    sc_signal< sc_logic > transform_data_U0_ap_done;
    sc_signal< sc_logic > transform_data_U0_ap_continue;
    sc_signal< sc_logic > transform_data_U0_ap_idle;
    sc_signal< sc_logic > transform_data_U0_ap_ready;
    sc_signal< sc_logic > transform_data_U0_start_out;
    sc_signal< sc_logic > transform_data_U0_start_write;
    sc_signal< sc_logic > transform_data_U0_inputImage_data_stream_0_V_read;
    sc_signal< sc_logic > transform_data_U0_inputImage_data_stream_1_V_read;
    sc_signal< sc_logic > transform_data_U0_inputImage_data_stream_2_V_read;
    sc_signal< sc_lv<32> > transform_data_U0_I_V_V_din;
    sc_signal< sc_logic > transform_data_U0_I_V_V_write;
    sc_signal< sc_lv<32> > transform_data_U0_I_COPY_V_V_din;
    sc_signal< sc_logic > transform_data_U0_I_COPY_V_V_write;
    sc_signal< sc_lv<32> > transform_data_U0_I_2_V_V_din;
    sc_signal< sc_logic > transform_data_U0_I_2_V_V_write;
    sc_signal< sc_lv<32> > transform_data_U0_ONES_V_V_din;
    sc_signal< sc_logic > transform_data_U0_ONES_V_V_write;
    sc_signal< sc_lv<16> > guidedfilter204_U0_I_enhanced_data_stream_V_din;
    sc_signal< sc_logic > guidedfilter204_U0_I_enhanced_data_stream_V_write;
    sc_signal< sc_logic > guidedfilter204_U0_ONES_V_V_read;
    sc_signal< sc_logic > guidedfilter204_U0_I_V_V_read;
    sc_signal< sc_logic > guidedfilter204_U0_I_2_V_V_read;
    sc_signal< sc_logic > guidedfilter204_U0_I_COPY_V_V_read;
    sc_signal< sc_logic > guidedfilter204_U0_ap_start;
    sc_signal< sc_logic > guidedfilter204_U0_ap_done;
    sc_signal< sc_logic > guidedfilter204_U0_ap_ready;
    sc_signal< sc_logic > guidedfilter204_U0_ap_idle;
    sc_signal< sc_logic > guidedfilter204_U0_ap_continue;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > I_V_V_full_n;
    sc_signal< sc_lv<32> > I_V_V_dout;
    sc_signal< sc_logic > I_V_V_empty_n;
    sc_signal< sc_logic > I_COPY_V_V_full_n;
    sc_signal< sc_lv<32> > I_COPY_V_V_dout;
    sc_signal< sc_logic > I_COPY_V_V_empty_n;
    sc_signal< sc_logic > I_2_V_V_full_n;
    sc_signal< sc_lv<32> > I_2_V_V_dout;
    sc_signal< sc_logic > I_2_V_V_empty_n;
    sc_signal< sc_logic > ONES_V_V_full_n;
    sc_signal< sc_lv<32> > ONES_V_V_dout;
    sc_signal< sc_logic > ONES_V_V_empty_n;
    sc_signal< sc_logic > ap_sync_done;
    sc_signal< sc_logic > ap_sync_ready;
    sc_signal< sc_lv<1> > start_for_guidedfilter204_U0_din;
    sc_signal< sc_logic > start_for_guidedfilter204_U0_full_n;
    sc_signal< sc_lv<1> > start_for_guidedfilter204_U0_dout;
    sc_signal< sc_logic > start_for_guidedfilter204_U0_empty_n;
    sc_signal< sc_logic > guidedfilter204_U0_start_full_n;
    sc_signal< sc_logic > guidedfilter204_U0_start_write;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_logic ap_const_logic_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_I_enhanced_data_stream_V_din();
    void thread_I_enhanced_data_stream_V_write();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sync_continue();
    void thread_ap_sync_done();
    void thread_ap_sync_ready();
    void thread_guidedfilter204_U0_ap_continue();
    void thread_guidedfilter204_U0_ap_start();
    void thread_guidedfilter204_U0_start_full_n();
    void thread_guidedfilter204_U0_start_write();
    void thread_inputImage_data_stream_0_V_read();
    void thread_inputImage_data_stream_1_V_read();
    void thread_inputImage_data_stream_2_V_read();
    void thread_start_for_guidedfilter204_U0_din();
    void thread_transform_data_U0_ap_continue();
    void thread_transform_data_U0_ap_start();
};

}

using namespace ap_rtl;

#endif
