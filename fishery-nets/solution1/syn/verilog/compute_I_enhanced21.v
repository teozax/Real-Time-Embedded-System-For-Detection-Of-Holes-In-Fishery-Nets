// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module compute_I_enhanced21 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        I_enhanced_data_stream_V_din,
        I_enhanced_data_stream_V_full_n,
        I_enhanced_data_stream_V_write,
        mean_A_V_V_dout,
        mean_A_V_V_empty_n,
        mean_A_V_V_read,
        mean_B_V_V_dout,
        mean_B_V_V_empty_n,
        mean_B_V_V_read,
        N_COPY_V_V_dout,
        N_COPY_V_V_empty_n,
        N_COPY_V_V_read,
        I_COPY_V_V_dout,
        I_COPY_V_V_empty_n,
        I_COPY_V_V_read
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state58 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [15:0] I_enhanced_data_stream_V_din;
input   I_enhanced_data_stream_V_full_n;
output   I_enhanced_data_stream_V_write;
input  [31:0] mean_A_V_V_dout;
input   mean_A_V_V_empty_n;
output   mean_A_V_V_read;
input  [31:0] mean_B_V_V_dout;
input   mean_B_V_V_empty_n;
output   mean_B_V_V_read;
input  [31:0] N_COPY_V_V_dout;
input   N_COPY_V_V_empty_n;
output   N_COPY_V_V_read;
input  [31:0] I_COPY_V_V_dout;
input   I_COPY_V_V_empty_n;
output   I_COPY_V_V_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg I_enhanced_data_stream_V_write;
reg mean_A_V_V_read;
reg mean_B_V_V_read;
reg N_COPY_V_V_read;
reg I_COPY_V_V_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    I_enhanced_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter55;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln887_reg_370;
reg   [0:0] icmp_ln887_reg_370_pp0_iter54_reg;
reg    mean_A_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    mean_B_V_V_blk_n;
reg    N_COPY_V_V_blk_n;
reg    I_COPY_V_V_blk_n;
reg   [16:0] indvar_flatten_reg_115;
wire   [0:0] icmp_ln887_fu_126_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
wire    ap_block_state15_pp0_stage0_iter13;
wire    ap_block_state16_pp0_stage0_iter14;
wire    ap_block_state17_pp0_stage0_iter15;
wire    ap_block_state18_pp0_stage0_iter16;
wire    ap_block_state19_pp0_stage0_iter17;
wire    ap_block_state20_pp0_stage0_iter18;
wire    ap_block_state21_pp0_stage0_iter19;
wire    ap_block_state22_pp0_stage0_iter20;
wire    ap_block_state23_pp0_stage0_iter21;
wire    ap_block_state24_pp0_stage0_iter22;
wire    ap_block_state25_pp0_stage0_iter23;
wire    ap_block_state26_pp0_stage0_iter24;
wire    ap_block_state27_pp0_stage0_iter25;
wire    ap_block_state28_pp0_stage0_iter26;
wire    ap_block_state29_pp0_stage0_iter27;
wire    ap_block_state30_pp0_stage0_iter28;
wire    ap_block_state31_pp0_stage0_iter29;
wire    ap_block_state32_pp0_stage0_iter30;
wire    ap_block_state33_pp0_stage0_iter31;
wire    ap_block_state34_pp0_stage0_iter32;
wire    ap_block_state35_pp0_stage0_iter33;
wire    ap_block_state36_pp0_stage0_iter34;
wire    ap_block_state37_pp0_stage0_iter35;
wire    ap_block_state38_pp0_stage0_iter36;
wire    ap_block_state39_pp0_stage0_iter37;
wire    ap_block_state40_pp0_stage0_iter38;
wire    ap_block_state41_pp0_stage0_iter39;
wire    ap_block_state42_pp0_stage0_iter40;
wire    ap_block_state43_pp0_stage0_iter41;
wire    ap_block_state44_pp0_stage0_iter42;
wire    ap_block_state45_pp0_stage0_iter43;
wire    ap_block_state46_pp0_stage0_iter44;
wire    ap_block_state47_pp0_stage0_iter45;
wire    ap_block_state48_pp0_stage0_iter46;
wire    ap_block_state49_pp0_stage0_iter47;
wire    ap_block_state50_pp0_stage0_iter48;
wire    ap_block_state51_pp0_stage0_iter49;
wire    ap_block_state52_pp0_stage0_iter50;
wire    ap_block_state53_pp0_stage0_iter51;
wire    ap_block_state54_pp0_stage0_iter52;
wire    ap_block_state55_pp0_stage0_iter53;
wire    ap_block_state56_pp0_stage0_iter54;
reg    ap_block_state57_pp0_stage0_iter55;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln887_reg_370_pp0_iter1_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter2_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter3_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter4_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter5_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter6_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter7_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter8_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter9_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter10_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter11_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter12_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter13_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter14_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter15_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter16_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter17_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter18_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter19_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter20_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter21_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter22_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter23_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter24_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter25_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter26_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter27_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter28_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter29_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter30_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter31_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter32_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter33_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter34_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter35_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter36_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter37_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter38_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter39_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter40_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter41_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter42_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter43_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter44_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter45_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter46_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter47_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter48_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter49_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter50_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter51_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter52_reg;
reg   [0:0] icmp_ln887_reg_370_pp0_iter53_reg;
wire   [16:0] add_ln887_fu_132_p2;
reg    ap_enable_reg_pp0_iter0;
reg  signed [31:0] tmp_V_214_reg_379;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter2_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter3_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter4_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter5_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter6_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter7_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter8_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter9_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter10_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter11_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter12_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter13_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter14_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter15_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter16_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter17_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter18_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter19_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter20_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter21_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter22_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter23_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter24_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter25_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter26_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter27_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter28_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter29_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter30_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter31_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter32_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter33_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter34_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter35_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter36_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter37_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter38_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter39_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter40_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter41_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter42_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter43_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter44_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter45_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter46_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter47_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter48_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter49_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter50_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter51_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter52_reg;
reg  signed [31:0] tmp_V_214_reg_379_pp0_iter53_reg;
wire  signed [47:0] sext_ln1148_fu_146_p1;
wire   [31:0] grp_fu_150_p2;
reg   [31:0] sdiv_ln1148_reg_401;
wire   [47:0] grp_fu_164_p2;
reg   [47:0] sdiv_ln1148_3_reg_406;
reg   [47:0] sdiv_ln1148_3_reg_406_pp0_iter53_reg;
wire   [63:0] r_V_8_fu_180_p2;
reg   [63:0] r_V_8_reg_411;
wire   [14:0] trunc_ln718_fu_186_p1;
reg   [14:0] trunc_ln718_reg_417;
wire   [31:0] q_V_fu_291_p2;
reg   [31:0] q_V_reg_422;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_enable_reg_pp0_iter50;
reg    ap_enable_reg_pp0_iter51;
reg    ap_enable_reg_pp0_iter52;
reg    ap_enable_reg_pp0_iter53;
reg    ap_enable_reg_pp0_iter54;
reg    ap_block_pp0_stage0_01001;
wire   [47:0] grp_fu_150_p0;
wire  signed [31:0] grp_fu_150_p1;
wire   [47:0] grp_fu_164_p0;
wire  signed [31:0] grp_fu_164_p1;
wire   [31:0] mean_a_V_fu_170_p1;
wire  signed [31:0] r_V_8_fu_180_p0;
wire  signed [31:0] r_V_8_fu_180_p1;
wire   [47:0] rhs_V_fu_193_p2;
wire   [47:0] trunc_ln700_fu_190_p1;
wire   [47:0] ret_V_15_fu_198_p2;
wire   [0:0] r_fu_222_p2;
wire   [0:0] tmp_fu_214_p3;
wire   [0:0] or_ln412_fu_227_p2;
wire   [0:0] tmp_28_fu_233_p3;
wire   [0:0] and_ln412_fu_240_p2;
wire   [31:0] p_Val2_30_fu_204_p4;
wire   [31:0] zext_ln412_fu_246_p1;
wire   [31:0] p_Val2_33_fu_250_p2;
wire   [31:0] sub_ln703_fu_256_p2;
wire   [31:0] shl_ln703_2_fu_273_p2;
wire   [31:0] shl_ln703_1_fu_267_p2;
wire   [31:0] sub_ln703_1_fu_279_p2;
wire   [31:0] add_ln703_fu_285_p2;
wire   [31:0] shl_ln703_fu_261_p2;
wire   [31:0] shl_ln703_4_fu_302_p2;
wire   [31:0] add_ln703_2_fu_307_p2;
wire   [31:0] shl_ln703_3_fu_297_p2;
wire   [31:0] q_V_2_fu_313_p2;
wire   [15:0] trunc_ln851_fu_337_p1;
wire   [15:0] ret_V_fu_319_p4;
wire   [0:0] icmp_ln851_fu_341_p2;
wire   [15:0] ret_V_14_fu_347_p2;
wire   [0:0] p_Result_s_fu_329_p3;
wire   [15:0] select_ln851_fu_353_p3;
reg    grp_fu_150_ce;
reg    grp_fu_164_ce;
wire    ap_CS_fsm_state58;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter55 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 ap_enable_reg_pp0_iter50 = 1'b0;
#0 ap_enable_reg_pp0_iter51 = 1'b0;
#0 ap_enable_reg_pp0_iter52 = 1'b0;
#0 ap_enable_reg_pp0_iter53 = 1'b0;
#0 ap_enable_reg_pp0_iter54 = 1'b0;
end

net_holes_detecticTB #(
    .ID( 1 ),
    .NUM_STAGE( 52 ),
    .din0_WIDTH( 48 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
net_holes_detecticTB_U59(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_150_p0),
    .din1(grp_fu_150_p1),
    .ce(grp_fu_150_ce),
    .dout(grp_fu_150_p2)
);

net_holes_detectibNq #(
    .ID( 1 ),
    .NUM_STAGE( 52 ),
    .din0_WIDTH( 48 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
net_holes_detectibNq_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_164_p0),
    .din1(grp_fu_164_p1),
    .ce(grp_fu_164_ce),
    .dout(grp_fu_164_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state58)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter52 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter53 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter54 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter54 <= ap_enable_reg_pp0_iter53;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter55 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter55 <= ap_enable_reg_pp0_iter54;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter55 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_fu_126_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_115 <= add_ln887_fu_132_p2;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_115 <= 17'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln887_reg_370 <= icmp_ln887_fu_126_p2;
        icmp_ln887_reg_370_pp0_iter1_reg <= icmp_ln887_reg_370;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln887_reg_370_pp0_iter10_reg <= icmp_ln887_reg_370_pp0_iter9_reg;
        icmp_ln887_reg_370_pp0_iter11_reg <= icmp_ln887_reg_370_pp0_iter10_reg;
        icmp_ln887_reg_370_pp0_iter12_reg <= icmp_ln887_reg_370_pp0_iter11_reg;
        icmp_ln887_reg_370_pp0_iter13_reg <= icmp_ln887_reg_370_pp0_iter12_reg;
        icmp_ln887_reg_370_pp0_iter14_reg <= icmp_ln887_reg_370_pp0_iter13_reg;
        icmp_ln887_reg_370_pp0_iter15_reg <= icmp_ln887_reg_370_pp0_iter14_reg;
        icmp_ln887_reg_370_pp0_iter16_reg <= icmp_ln887_reg_370_pp0_iter15_reg;
        icmp_ln887_reg_370_pp0_iter17_reg <= icmp_ln887_reg_370_pp0_iter16_reg;
        icmp_ln887_reg_370_pp0_iter18_reg <= icmp_ln887_reg_370_pp0_iter17_reg;
        icmp_ln887_reg_370_pp0_iter19_reg <= icmp_ln887_reg_370_pp0_iter18_reg;
        icmp_ln887_reg_370_pp0_iter20_reg <= icmp_ln887_reg_370_pp0_iter19_reg;
        icmp_ln887_reg_370_pp0_iter21_reg <= icmp_ln887_reg_370_pp0_iter20_reg;
        icmp_ln887_reg_370_pp0_iter22_reg <= icmp_ln887_reg_370_pp0_iter21_reg;
        icmp_ln887_reg_370_pp0_iter23_reg <= icmp_ln887_reg_370_pp0_iter22_reg;
        icmp_ln887_reg_370_pp0_iter24_reg <= icmp_ln887_reg_370_pp0_iter23_reg;
        icmp_ln887_reg_370_pp0_iter25_reg <= icmp_ln887_reg_370_pp0_iter24_reg;
        icmp_ln887_reg_370_pp0_iter26_reg <= icmp_ln887_reg_370_pp0_iter25_reg;
        icmp_ln887_reg_370_pp0_iter27_reg <= icmp_ln887_reg_370_pp0_iter26_reg;
        icmp_ln887_reg_370_pp0_iter28_reg <= icmp_ln887_reg_370_pp0_iter27_reg;
        icmp_ln887_reg_370_pp0_iter29_reg <= icmp_ln887_reg_370_pp0_iter28_reg;
        icmp_ln887_reg_370_pp0_iter2_reg <= icmp_ln887_reg_370_pp0_iter1_reg;
        icmp_ln887_reg_370_pp0_iter30_reg <= icmp_ln887_reg_370_pp0_iter29_reg;
        icmp_ln887_reg_370_pp0_iter31_reg <= icmp_ln887_reg_370_pp0_iter30_reg;
        icmp_ln887_reg_370_pp0_iter32_reg <= icmp_ln887_reg_370_pp0_iter31_reg;
        icmp_ln887_reg_370_pp0_iter33_reg <= icmp_ln887_reg_370_pp0_iter32_reg;
        icmp_ln887_reg_370_pp0_iter34_reg <= icmp_ln887_reg_370_pp0_iter33_reg;
        icmp_ln887_reg_370_pp0_iter35_reg <= icmp_ln887_reg_370_pp0_iter34_reg;
        icmp_ln887_reg_370_pp0_iter36_reg <= icmp_ln887_reg_370_pp0_iter35_reg;
        icmp_ln887_reg_370_pp0_iter37_reg <= icmp_ln887_reg_370_pp0_iter36_reg;
        icmp_ln887_reg_370_pp0_iter38_reg <= icmp_ln887_reg_370_pp0_iter37_reg;
        icmp_ln887_reg_370_pp0_iter39_reg <= icmp_ln887_reg_370_pp0_iter38_reg;
        icmp_ln887_reg_370_pp0_iter3_reg <= icmp_ln887_reg_370_pp0_iter2_reg;
        icmp_ln887_reg_370_pp0_iter40_reg <= icmp_ln887_reg_370_pp0_iter39_reg;
        icmp_ln887_reg_370_pp0_iter41_reg <= icmp_ln887_reg_370_pp0_iter40_reg;
        icmp_ln887_reg_370_pp0_iter42_reg <= icmp_ln887_reg_370_pp0_iter41_reg;
        icmp_ln887_reg_370_pp0_iter43_reg <= icmp_ln887_reg_370_pp0_iter42_reg;
        icmp_ln887_reg_370_pp0_iter44_reg <= icmp_ln887_reg_370_pp0_iter43_reg;
        icmp_ln887_reg_370_pp0_iter45_reg <= icmp_ln887_reg_370_pp0_iter44_reg;
        icmp_ln887_reg_370_pp0_iter46_reg <= icmp_ln887_reg_370_pp0_iter45_reg;
        icmp_ln887_reg_370_pp0_iter47_reg <= icmp_ln887_reg_370_pp0_iter46_reg;
        icmp_ln887_reg_370_pp0_iter48_reg <= icmp_ln887_reg_370_pp0_iter47_reg;
        icmp_ln887_reg_370_pp0_iter49_reg <= icmp_ln887_reg_370_pp0_iter48_reg;
        icmp_ln887_reg_370_pp0_iter4_reg <= icmp_ln887_reg_370_pp0_iter3_reg;
        icmp_ln887_reg_370_pp0_iter50_reg <= icmp_ln887_reg_370_pp0_iter49_reg;
        icmp_ln887_reg_370_pp0_iter51_reg <= icmp_ln887_reg_370_pp0_iter50_reg;
        icmp_ln887_reg_370_pp0_iter52_reg <= icmp_ln887_reg_370_pp0_iter51_reg;
        icmp_ln887_reg_370_pp0_iter53_reg <= icmp_ln887_reg_370_pp0_iter52_reg;
        icmp_ln887_reg_370_pp0_iter54_reg <= icmp_ln887_reg_370_pp0_iter53_reg;
        icmp_ln887_reg_370_pp0_iter5_reg <= icmp_ln887_reg_370_pp0_iter4_reg;
        icmp_ln887_reg_370_pp0_iter6_reg <= icmp_ln887_reg_370_pp0_iter5_reg;
        icmp_ln887_reg_370_pp0_iter7_reg <= icmp_ln887_reg_370_pp0_iter6_reg;
        icmp_ln887_reg_370_pp0_iter8_reg <= icmp_ln887_reg_370_pp0_iter7_reg;
        icmp_ln887_reg_370_pp0_iter9_reg <= icmp_ln887_reg_370_pp0_iter8_reg;
        sdiv_ln1148_3_reg_406_pp0_iter53_reg <= sdiv_ln1148_3_reg_406;
        tmp_V_214_reg_379_pp0_iter10_reg <= tmp_V_214_reg_379_pp0_iter9_reg;
        tmp_V_214_reg_379_pp0_iter11_reg <= tmp_V_214_reg_379_pp0_iter10_reg;
        tmp_V_214_reg_379_pp0_iter12_reg <= tmp_V_214_reg_379_pp0_iter11_reg;
        tmp_V_214_reg_379_pp0_iter13_reg <= tmp_V_214_reg_379_pp0_iter12_reg;
        tmp_V_214_reg_379_pp0_iter14_reg <= tmp_V_214_reg_379_pp0_iter13_reg;
        tmp_V_214_reg_379_pp0_iter15_reg <= tmp_V_214_reg_379_pp0_iter14_reg;
        tmp_V_214_reg_379_pp0_iter16_reg <= tmp_V_214_reg_379_pp0_iter15_reg;
        tmp_V_214_reg_379_pp0_iter17_reg <= tmp_V_214_reg_379_pp0_iter16_reg;
        tmp_V_214_reg_379_pp0_iter18_reg <= tmp_V_214_reg_379_pp0_iter17_reg;
        tmp_V_214_reg_379_pp0_iter19_reg <= tmp_V_214_reg_379_pp0_iter18_reg;
        tmp_V_214_reg_379_pp0_iter20_reg <= tmp_V_214_reg_379_pp0_iter19_reg;
        tmp_V_214_reg_379_pp0_iter21_reg <= tmp_V_214_reg_379_pp0_iter20_reg;
        tmp_V_214_reg_379_pp0_iter22_reg <= tmp_V_214_reg_379_pp0_iter21_reg;
        tmp_V_214_reg_379_pp0_iter23_reg <= tmp_V_214_reg_379_pp0_iter22_reg;
        tmp_V_214_reg_379_pp0_iter24_reg <= tmp_V_214_reg_379_pp0_iter23_reg;
        tmp_V_214_reg_379_pp0_iter25_reg <= tmp_V_214_reg_379_pp0_iter24_reg;
        tmp_V_214_reg_379_pp0_iter26_reg <= tmp_V_214_reg_379_pp0_iter25_reg;
        tmp_V_214_reg_379_pp0_iter27_reg <= tmp_V_214_reg_379_pp0_iter26_reg;
        tmp_V_214_reg_379_pp0_iter28_reg <= tmp_V_214_reg_379_pp0_iter27_reg;
        tmp_V_214_reg_379_pp0_iter29_reg <= tmp_V_214_reg_379_pp0_iter28_reg;
        tmp_V_214_reg_379_pp0_iter2_reg <= tmp_V_214_reg_379;
        tmp_V_214_reg_379_pp0_iter30_reg <= tmp_V_214_reg_379_pp0_iter29_reg;
        tmp_V_214_reg_379_pp0_iter31_reg <= tmp_V_214_reg_379_pp0_iter30_reg;
        tmp_V_214_reg_379_pp0_iter32_reg <= tmp_V_214_reg_379_pp0_iter31_reg;
        tmp_V_214_reg_379_pp0_iter33_reg <= tmp_V_214_reg_379_pp0_iter32_reg;
        tmp_V_214_reg_379_pp0_iter34_reg <= tmp_V_214_reg_379_pp0_iter33_reg;
        tmp_V_214_reg_379_pp0_iter35_reg <= tmp_V_214_reg_379_pp0_iter34_reg;
        tmp_V_214_reg_379_pp0_iter36_reg <= tmp_V_214_reg_379_pp0_iter35_reg;
        tmp_V_214_reg_379_pp0_iter37_reg <= tmp_V_214_reg_379_pp0_iter36_reg;
        tmp_V_214_reg_379_pp0_iter38_reg <= tmp_V_214_reg_379_pp0_iter37_reg;
        tmp_V_214_reg_379_pp0_iter39_reg <= tmp_V_214_reg_379_pp0_iter38_reg;
        tmp_V_214_reg_379_pp0_iter3_reg <= tmp_V_214_reg_379_pp0_iter2_reg;
        tmp_V_214_reg_379_pp0_iter40_reg <= tmp_V_214_reg_379_pp0_iter39_reg;
        tmp_V_214_reg_379_pp0_iter41_reg <= tmp_V_214_reg_379_pp0_iter40_reg;
        tmp_V_214_reg_379_pp0_iter42_reg <= tmp_V_214_reg_379_pp0_iter41_reg;
        tmp_V_214_reg_379_pp0_iter43_reg <= tmp_V_214_reg_379_pp0_iter42_reg;
        tmp_V_214_reg_379_pp0_iter44_reg <= tmp_V_214_reg_379_pp0_iter43_reg;
        tmp_V_214_reg_379_pp0_iter45_reg <= tmp_V_214_reg_379_pp0_iter44_reg;
        tmp_V_214_reg_379_pp0_iter46_reg <= tmp_V_214_reg_379_pp0_iter45_reg;
        tmp_V_214_reg_379_pp0_iter47_reg <= tmp_V_214_reg_379_pp0_iter46_reg;
        tmp_V_214_reg_379_pp0_iter48_reg <= tmp_V_214_reg_379_pp0_iter47_reg;
        tmp_V_214_reg_379_pp0_iter49_reg <= tmp_V_214_reg_379_pp0_iter48_reg;
        tmp_V_214_reg_379_pp0_iter4_reg <= tmp_V_214_reg_379_pp0_iter3_reg;
        tmp_V_214_reg_379_pp0_iter50_reg <= tmp_V_214_reg_379_pp0_iter49_reg;
        tmp_V_214_reg_379_pp0_iter51_reg <= tmp_V_214_reg_379_pp0_iter50_reg;
        tmp_V_214_reg_379_pp0_iter52_reg <= tmp_V_214_reg_379_pp0_iter51_reg;
        tmp_V_214_reg_379_pp0_iter53_reg <= tmp_V_214_reg_379_pp0_iter52_reg;
        tmp_V_214_reg_379_pp0_iter5_reg <= tmp_V_214_reg_379_pp0_iter4_reg;
        tmp_V_214_reg_379_pp0_iter6_reg <= tmp_V_214_reg_379_pp0_iter5_reg;
        tmp_V_214_reg_379_pp0_iter7_reg <= tmp_V_214_reg_379_pp0_iter6_reg;
        tmp_V_214_reg_379_pp0_iter8_reg <= tmp_V_214_reg_379_pp0_iter7_reg;
        tmp_V_214_reg_379_pp0_iter9_reg <= tmp_V_214_reg_379_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_370_pp0_iter53_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        q_V_reg_422 <= q_V_fu_291_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_370_pp0_iter52_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_V_8_reg_411 <= r_V_8_fu_180_p2;
        trunc_ln718_reg_417 <= trunc_ln718_fu_186_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_370_pp0_iter51_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sdiv_ln1148_3_reg_406 <= grp_fu_164_p2;
        sdiv_ln1148_reg_401 <= grp_fu_150_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_370 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_214_reg_379 <= I_COPY_V_V_dout;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_370 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        I_COPY_V_V_blk_n = I_COPY_V_V_empty_n;
    end else begin
        I_COPY_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_370 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        I_COPY_V_V_read = 1'b1;
    end else begin
        I_COPY_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_370_pp0_iter54_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter55 == 1'b1))) begin
        I_enhanced_data_stream_V_blk_n = I_enhanced_data_stream_V_full_n;
    end else begin
        I_enhanced_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_370_pp0_iter54_reg == 1'd0) & (ap_enable_reg_pp0_iter55 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        I_enhanced_data_stream_V_write = 1'b1;
    end else begin
        I_enhanced_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_370 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        N_COPY_V_V_blk_n = N_COPY_V_V_empty_n;
    end else begin
        N_COPY_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_370 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        N_COPY_V_V_read = 1'b1;
    end else begin
        N_COPY_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln887_fu_126_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter54 == 1'b0) & (ap_enable_reg_pp0_iter53 == 1'b0) & (ap_enable_reg_pp0_iter52 == 1'b0) & (ap_enable_reg_pp0_iter51 == 1'b0) & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter55 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_150_ce = 1'b1;
    end else begin
        grp_fu_150_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_164_ce = 1'b1;
    end else begin
        grp_fu_164_ce = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_370 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mean_A_V_V_blk_n = mean_A_V_V_empty_n;
    end else begin
        mean_A_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_370 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mean_A_V_V_read = 1'b1;
    end else begin
        mean_A_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_370 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mean_B_V_V_blk_n = mean_B_V_V_empty_n;
    end else begin
        mean_B_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_370 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mean_B_V_V_read = 1'b1;
    end else begin
        mean_B_V_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln887_fu_126_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter54 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter55 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter54 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter55 == 1'b1)) | ((icmp_ln887_fu_126_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign I_enhanced_data_stream_V_din = ((p_Result_s_fu_329_p3[0:0] === 1'b1) ? select_ln851_fu_353_p3 : ret_V_fu_319_p4);

assign add_ln703_2_fu_307_p2 = (32'd1966080 + shl_ln703_4_fu_302_p2);

assign add_ln703_fu_285_p2 = (shl_ln703_1_fu_267_p2 + sub_ln703_1_fu_279_p2);

assign add_ln887_fu_132_p2 = (indvar_flatten_reg_115 + 17'd1);

assign and_ln412_fu_240_p2 = (tmp_28_fu_233_p3 & or_ln412_fu_227_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln887_reg_370 == 1'd0) & (1'b0 == I_COPY_V_V_empty_n)) | ((icmp_ln887_reg_370 == 1'd0) & (1'b0 == N_COPY_V_V_empty_n)) | ((icmp_ln887_reg_370 == 1'd0) & (mean_B_V_V_empty_n == 1'b0)) | ((icmp_ln887_reg_370 == 1'd0) & (mean_A_V_V_empty_n == 1'b0)))) | ((icmp_ln887_reg_370_pp0_iter54_reg == 1'd0) & (1'b0 == I_enhanced_data_stream_V_full_n) & (ap_enable_reg_pp0_iter55 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln887_reg_370 == 1'd0) & (1'b0 == I_COPY_V_V_empty_n)) | ((icmp_ln887_reg_370 == 1'd0) & (1'b0 == N_COPY_V_V_empty_n)) | ((icmp_ln887_reg_370 == 1'd0) & (mean_B_V_V_empty_n == 1'b0)) | ((icmp_ln887_reg_370 == 1'd0) & (mean_A_V_V_empty_n == 1'b0)))) | ((icmp_ln887_reg_370_pp0_iter54_reg == 1'd0) & (1'b0 == I_enhanced_data_stream_V_full_n) & (ap_enable_reg_pp0_iter55 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln887_reg_370 == 1'd0) & (1'b0 == I_COPY_V_V_empty_n)) | ((icmp_ln887_reg_370 == 1'd0) & (1'b0 == N_COPY_V_V_empty_n)) | ((icmp_ln887_reg_370 == 1'd0) & (mean_B_V_V_empty_n == 1'b0)) | ((icmp_ln887_reg_370 == 1'd0) & (mean_A_V_V_empty_n == 1'b0)))) | ((icmp_ln887_reg_370_pp0_iter54_reg == 1'd0) & (1'b0 == I_enhanced_data_stream_V_full_n) & (ap_enable_reg_pp0_iter55 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (((icmp_ln887_reg_370 == 1'd0) & (1'b0 == I_COPY_V_V_empty_n)) | ((icmp_ln887_reg_370 == 1'd0) & (1'b0 == N_COPY_V_V_empty_n)) | ((icmp_ln887_reg_370 == 1'd0) & (mean_B_V_V_empty_n == 1'b0)) | ((icmp_ln887_reg_370 == 1'd0) & (mean_A_V_V_empty_n == 1'b0)));
end

assign ap_block_state40_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter48 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter49 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter50 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter51 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage0_iter52 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter53 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage0_iter54 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state57_pp0_stage0_iter55 = ((icmp_ln887_reg_370_pp0_iter54_reg == 1'd0) & (1'b0 == I_enhanced_data_stream_V_full_n));
end

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign grp_fu_150_p0 = {{mean_A_V_V_dout}, {16'd0}};

assign grp_fu_150_p1 = sext_ln1148_fu_146_p1;

assign grp_fu_164_p0 = {{mean_B_V_V_dout}, {16'd0}};

assign grp_fu_164_p1 = sext_ln1148_fu_146_p1;

assign icmp_ln851_fu_341_p2 = ((trunc_ln851_fu_337_p1 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln887_fu_126_p2 = ((indvar_flatten_reg_115 == 17'd129600) ? 1'b1 : 1'b0);

assign mean_a_V_fu_170_p1 = sdiv_ln1148_reg_401[31:0];

assign or_ln412_fu_227_p2 = (tmp_fu_214_p3 | r_fu_222_p2);

assign p_Result_s_fu_329_p3 = q_V_2_fu_313_p2[32'd31];

assign p_Val2_30_fu_204_p4 = {{ret_V_15_fu_198_p2[47:16]}};

assign p_Val2_33_fu_250_p2 = (p_Val2_30_fu_204_p4 + zext_ln412_fu_246_p1);

assign q_V_2_fu_313_p2 = (add_ln703_2_fu_307_p2 + shl_ln703_3_fu_297_p2);

assign q_V_fu_291_p2 = (add_ln703_fu_285_p2 + shl_ln703_fu_261_p2);

assign r_V_8_fu_180_p0 = tmp_V_214_reg_379_pp0_iter52_reg;

assign r_V_8_fu_180_p1 = mean_a_V_fu_170_p1;

assign r_V_8_fu_180_p2 = ($signed(r_V_8_fu_180_p0) * $signed(r_V_8_fu_180_p1));

assign r_fu_222_p2 = ((trunc_ln718_reg_417 != 15'd0) ? 1'b1 : 1'b0);

assign ret_V_14_fu_347_p2 = (16'd1 + ret_V_fu_319_p4);

assign ret_V_15_fu_198_p2 = (rhs_V_fu_193_p2 + trunc_ln700_fu_190_p1);

assign ret_V_fu_319_p4 = {{q_V_2_fu_313_p2[31:16]}};

assign rhs_V_fu_193_p2 = sdiv_ln1148_3_reg_406_pp0_iter53_reg << 48'd16;

assign select_ln851_fu_353_p3 = ((icmp_ln851_fu_341_p2[0:0] === 1'b1) ? ret_V_fu_319_p4 : ret_V_14_fu_347_p2);

assign sext_ln1148_fu_146_p1 = $signed(N_COPY_V_V_dout);

assign shl_ln703_1_fu_267_p2 = sub_ln703_fu_256_p2 << 32'd1;

assign shl_ln703_2_fu_273_p2 = p_Val2_33_fu_250_p2 << 32'd2;

assign shl_ln703_3_fu_297_p2 = q_V_reg_422 << 32'd3;

assign shl_ln703_4_fu_302_p2 = q_V_reg_422 << 32'd1;

assign shl_ln703_fu_261_p2 = sub_ln703_fu_256_p2 << 32'd3;

assign sub_ln703_1_fu_279_p2 = (shl_ln703_2_fu_273_p2 - p_Val2_33_fu_250_p2);

assign sub_ln703_fu_256_p2 = ($signed(tmp_V_214_reg_379_pp0_iter53_reg) - $signed(p_Val2_33_fu_250_p2));

assign tmp_28_fu_233_p3 = r_V_8_reg_411[32'd15];

assign tmp_fu_214_p3 = ret_V_15_fu_198_p2[32'd16];

assign trunc_ln700_fu_190_p1 = r_V_8_reg_411[47:0];

assign trunc_ln718_fu_186_p1 = r_V_8_fu_180_p2[14:0];

assign trunc_ln851_fu_337_p1 = q_V_2_fu_313_p2[15:0];

assign zext_ln412_fu_246_p1 = and_ln412_fu_240_p2;

endmodule //compute_I_enhanced21
