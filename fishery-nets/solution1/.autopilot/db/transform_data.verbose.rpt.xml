<profile>

<section name = "Vivado HLS Report for 'transform_data'" level="0">
<item name = "Date">Thu Jun  3 20:16:31 2021
</item>
<item name = "Version">2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)</item>
<item name = "Project">fishery-nets</item>
<item name = "Solution">solution1</item>
<item name = "Product family">zynquplus</item>
<item name = "Target device">xczu9eg-ffvb1156-2-e</item>
</section>

<section name = "Performance Estimates" level="0">
<item name = "Timing (ns)">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="4">Clock, Target, Estimated, Uncertainty</keys>
<column name="ap_clk">5.00, 4.037, 0.63</column>
</table>
</item>
</section>
</item>
<item name = "Latency (clock cycles)">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">, min, max, min, max, Type</keys>
<column name="">129605, 129605, 129605, 129605, none</column>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="0">
<keys size="7">Instance, Module, min, max, min, max, Type</keys>
</table>
</item>
<item name = "Loop"><table name="" hasTotal="0">
<keys size="8">Loop Name, min, max, Latency, achieved, target, Count, Pipelined</keys>
<column name="- Loop 1">129603, 129603, 5, 1, 1, 129600, yes</column>
</table>
</item>
</section>
</item>
</section>
</item>
</section>

<section name = "Utilization Estimates" level="0">
<item name = "Summary"><table name="" hasTotal="1">
<keys size="6">Name, BRAM_18K, DSP48E, FF, LUT, URAM</keys>
<column name="DSP">-, -, -, -, -</column>
<column name="Expression">-, 4, 0, 188, -</column>
<column name="FIFO">-, -, -, -, -</column>
<column name="Instance">-, -, -, -, -</column>
<column name="Memory">-, -, -, -, -</column>
<column name="Multiplexer">-, -, -, 129, -</column>
<column name="Register">0, -, 191, 32, -</column>
<specialColumn name="Available">1824, 2520, 548160, 274080, 0</specialColumn>
<specialColumn name="Utilization (%)">0, ~0, ~0, ~0, 0</specialColumn>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="1">
<keys size="7">Instance, Module, BRAM_18K, DSP48E, FF, LUT, URAM</keys>
</table>
</item>
<item name = "DSP48E"><table name="" hasTotal="0">
<keys size="3">Instance, Module, Expression</keys>
</table>
</item>
<item name = "Memory"><table name="" hasTotal="1">
<keys size="10">Memory, Module, BRAM_18K, FF, LUT, URAM, Words, Bits, Banks, W*Bits*Banks</keys>
</table>
</item>
<item name = "FIFO"><table name="" hasTotal="1">
<keys size="8">Name, BRAM_18K, FF, LUT, URAM, Depth, Bits, Size:D*B</keys>
</table>
</item>
<item name = "Expression"><table name="" hasTotal="1">
<keys size="7">Variable Name, Operation, DSP48E, FF, LUT, Bitwidth P0, Bitwidth P1</keys>
<column name="mul_ln1148_fu_159_p2">*, 2, 0, 50, 25, 24</column>
<column name="r_V_fu_182_p2">*, 2, 0, 41, 24, 24</column>
<column name="add_ln25_fu_142_p2">+, 0, 0, 24, 17, 1</column>
<column name="p_Val2_s_fu_241_p2">+, 0, 0, 24, 17, 17</column>
<column name="and_ln412_fu_231_p2">and, 0, 0, 2, 1, 1</column>
<column name="icmp_ln25_fu_136_p2">icmp, 0, 0, 20, 17, 12</column>
<column name="r_1_fu_192_p2">icmp, 0, 0, 13, 15, 1</column>
<column name="ap_block_pp0_stage0_01001">or, 0, 0, 2, 1, 1</column>
<column name="ap_block_state1">or, 0, 0, 2, 1, 1</column>
<column name="ap_block_state3_pp0_stage0_iter1">or, 0, 0, 2, 1, 1</column>
<column name="ap_block_state6_pp0_stage0_iter4">or, 0, 0, 2, 1, 1</column>
<column name="r_fu_219_p2">or, 0, 0, 2, 1, 1</column>
<column name="ap_enable_pp0">xor, 0, 0, 2, 1, 2</column>
<column name="ap_enable_reg_pp0_iter1">xor, 0, 0, 2, 2, 1</column>
</table>
</item>
<item name = "Multiplexer"><table name="" hasTotal="1">
<keys size="5">Name, LUT, Input Size, Bits, Total Bits</keys>
<column name="I_2_V_V_blk_n">9, 2, 1, 2</column>
<column name="I_COPY_V_V_blk_n">9, 2, 1, 2</column>
<column name="I_V_V_blk_n">9, 2, 1, 2</column>
<column name="ONES_V_V_blk_n">9, 2, 1, 2</column>
<column name="ap_NS_fsm">21, 4, 1, 4</column>
<column name="ap_done">9, 2, 1, 2</column>
<column name="ap_enable_reg_pp0_iter1">9, 2, 1, 2</column>
<column name="ap_enable_reg_pp0_iter4">9, 2, 1, 2</column>
<column name="indvar_flatten_reg_125">9, 2, 17, 34</column>
<column name="inputImage_data_stream_0_V_blk_n">9, 2, 1, 2</column>
<column name="inputImage_data_stream_1_V_blk_n">9, 2, 1, 2</column>
<column name="inputImage_data_stream_2_V_blk_n">9, 2, 1, 2</column>
<column name="real_start">9, 2, 1, 2</column>
</table>
</item>
<item name = "Register"><table name="" hasTotal="1">
<keys size="5">Name, FF, LUT, Bits, Const Bits</keys>
<column name="ap_CS_fsm">3, 0, 3, 0</column>
<column name="ap_done_reg">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter0">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter1">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter2">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter3">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter4">1, 0, 1, 0</column>
<column name="i_V_1_reg_271">24, 0, 24, 0</column>
<column name="icmp_ln25_reg_252">1, 0, 1, 0</column>
<column name="indvar_flatten_reg_125">17, 0, 17, 0</column>
<column name="r_1_reg_283">1, 0, 1, 0</column>
<column name="r_V_reg_276">48, 0, 48, 0</column>
<column name="start_once_reg">1, 0, 1, 0</column>
<column name="tmp_23_reg_261">8, 0, 8, 0</column>
<column name="tmp_reg_266">18, 0, 18, 0</column>
<column name="icmp_ln25_reg_252">64, 32, 1, 0</column>
</table>
</item>
</section>
</item>
</section>

<section name = "Interface" level="0">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">RTL Ports, Dir, Bits, Protocol, Source Object, C Type</keys>
<column name="ap_clk">in, 1, ap_ctrl_hs, transform_data, return value</column>
<column name="ap_rst">in, 1, ap_ctrl_hs, transform_data, return value</column>
<column name="ap_start">in, 1, ap_ctrl_hs, transform_data, return value</column>
<column name="start_full_n">in, 1, ap_ctrl_hs, transform_data, return value</column>
<column name="ap_done">out, 1, ap_ctrl_hs, transform_data, return value</column>
<column name="ap_continue">in, 1, ap_ctrl_hs, transform_data, return value</column>
<column name="ap_idle">out, 1, ap_ctrl_hs, transform_data, return value</column>
<column name="ap_ready">out, 1, ap_ctrl_hs, transform_data, return value</column>
<column name="start_out">out, 1, ap_ctrl_hs, transform_data, return value</column>
<column name="start_write">out, 1, ap_ctrl_hs, transform_data, return value</column>
<column name="inputImage_data_stream_0_V_dout">in, 8, ap_fifo, inputImage_data_stream_0_V, pointer</column>
<column name="inputImage_data_stream_0_V_empty_n">in, 1, ap_fifo, inputImage_data_stream_0_V, pointer</column>
<column name="inputImage_data_stream_0_V_read">out, 1, ap_fifo, inputImage_data_stream_0_V, pointer</column>
<column name="inputImage_data_stream_1_V_dout">in, 8, ap_fifo, inputImage_data_stream_1_V, pointer</column>
<column name="inputImage_data_stream_1_V_empty_n">in, 1, ap_fifo, inputImage_data_stream_1_V, pointer</column>
<column name="inputImage_data_stream_1_V_read">out, 1, ap_fifo, inputImage_data_stream_1_V, pointer</column>
<column name="inputImage_data_stream_2_V_dout">in, 8, ap_fifo, inputImage_data_stream_2_V, pointer</column>
<column name="inputImage_data_stream_2_V_empty_n">in, 1, ap_fifo, inputImage_data_stream_2_V, pointer</column>
<column name="inputImage_data_stream_2_V_read">out, 1, ap_fifo, inputImage_data_stream_2_V, pointer</column>
<column name="I_V_V_din">out, 32, ap_fifo, I_V_V, pointer</column>
<column name="I_V_V_full_n">in, 1, ap_fifo, I_V_V, pointer</column>
<column name="I_V_V_write">out, 1, ap_fifo, I_V_V, pointer</column>
<column name="I_COPY_V_V_din">out, 32, ap_fifo, I_COPY_V_V, pointer</column>
<column name="I_COPY_V_V_full_n">in, 1, ap_fifo, I_COPY_V_V, pointer</column>
<column name="I_COPY_V_V_write">out, 1, ap_fifo, I_COPY_V_V, pointer</column>
<column name="I_2_V_V_din">out, 32, ap_fifo, I_2_V_V, pointer</column>
<column name="I_2_V_V_full_n">in, 1, ap_fifo, I_2_V_V, pointer</column>
<column name="I_2_V_V_write">out, 1, ap_fifo, I_2_V_V, pointer</column>
<column name="ONES_V_V_din">out, 32, ap_fifo, ONES_V_V, pointer</column>
<column name="ONES_V_V_full_n">in, 1, ap_fifo, ONES_V_V, pointer</column>
<column name="ONES_V_V_write">out, 1, ap_fifo, ONES_V_V, pointer</column>
</table>
</item>
</section>
</profile>
