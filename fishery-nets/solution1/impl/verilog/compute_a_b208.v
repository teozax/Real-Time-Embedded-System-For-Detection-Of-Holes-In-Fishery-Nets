// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module compute_a_b208 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        N_V_V_dout,
        N_V_V_empty_n,
        N_V_V_read,
        N_COPY_V_V_din,
        N_COPY_V_V_full_n,
        N_COPY_V_V_write,
        mean_I_V_V_dout,
        mean_I_V_V_empty_n,
        mean_I_V_V_read,
        mean_II_V_V_dout,
        mean_II_V_V_empty_n,
        mean_II_V_V_read,
        a_V_V_din,
        a_V_V_full_n,
        a_V_V_write,
        b_V_V_din,
        b_V_V_full_n,
        b_V_V_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state112 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [31:0] N_V_V_dout;
input   N_V_V_empty_n;
output   N_V_V_read;
output  [31:0] N_COPY_V_V_din;
input   N_COPY_V_V_full_n;
output   N_COPY_V_V_write;
input  [31:0] mean_I_V_V_dout;
input   mean_I_V_V_empty_n;
output   mean_I_V_V_read;
input  [31:0] mean_II_V_V_dout;
input   mean_II_V_V_empty_n;
output   mean_II_V_V_read;
output  [31:0] a_V_V_din;
input   a_V_V_full_n;
output   a_V_V_write;
output  [31:0] b_V_V_din;
input   b_V_V_full_n;
output   b_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg N_V_V_read;
reg N_COPY_V_V_write;
reg mean_I_V_V_read;
reg mean_II_V_V_read;
reg a_V_V_write;
reg b_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    N_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln887_reg_359;
reg    N_COPY_V_V_blk_n;
reg    ap_enable_reg_pp0_iter109;
reg   [0:0] icmp_ln887_reg_359_pp0_iter108_reg;
reg    mean_I_V_V_blk_n;
reg    mean_II_V_V_blk_n;
reg    a_V_V_blk_n;
reg    b_V_V_blk_n;
reg   [16:0] indvar_flatten_reg_109;
wire   [0:0] icmp_ln887_fu_120_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
wire    ap_block_state15_pp0_stage0_iter13;
wire    ap_block_state16_pp0_stage0_iter14;
wire    ap_block_state17_pp0_stage0_iter15;
wire    ap_block_state18_pp0_stage0_iter16;
wire    ap_block_state19_pp0_stage0_iter17;
wire    ap_block_state20_pp0_stage0_iter18;
wire    ap_block_state21_pp0_stage0_iter19;
wire    ap_block_state22_pp0_stage0_iter20;
wire    ap_block_state23_pp0_stage0_iter21;
wire    ap_block_state24_pp0_stage0_iter22;
wire    ap_block_state25_pp0_stage0_iter23;
wire    ap_block_state26_pp0_stage0_iter24;
wire    ap_block_state27_pp0_stage0_iter25;
wire    ap_block_state28_pp0_stage0_iter26;
wire    ap_block_state29_pp0_stage0_iter27;
wire    ap_block_state30_pp0_stage0_iter28;
wire    ap_block_state31_pp0_stage0_iter29;
wire    ap_block_state32_pp0_stage0_iter30;
wire    ap_block_state33_pp0_stage0_iter31;
wire    ap_block_state34_pp0_stage0_iter32;
wire    ap_block_state35_pp0_stage0_iter33;
wire    ap_block_state36_pp0_stage0_iter34;
wire    ap_block_state37_pp0_stage0_iter35;
wire    ap_block_state38_pp0_stage0_iter36;
wire    ap_block_state39_pp0_stage0_iter37;
wire    ap_block_state40_pp0_stage0_iter38;
wire    ap_block_state41_pp0_stage0_iter39;
wire    ap_block_state42_pp0_stage0_iter40;
wire    ap_block_state43_pp0_stage0_iter41;
wire    ap_block_state44_pp0_stage0_iter42;
wire    ap_block_state45_pp0_stage0_iter43;
wire    ap_block_state46_pp0_stage0_iter44;
wire    ap_block_state47_pp0_stage0_iter45;
wire    ap_block_state48_pp0_stage0_iter46;
wire    ap_block_state49_pp0_stage0_iter47;
wire    ap_block_state50_pp0_stage0_iter48;
wire    ap_block_state51_pp0_stage0_iter49;
wire    ap_block_state52_pp0_stage0_iter50;
wire    ap_block_state53_pp0_stage0_iter51;
wire    ap_block_state54_pp0_stage0_iter52;
wire    ap_block_state55_pp0_stage0_iter53;
wire    ap_block_state56_pp0_stage0_iter54;
wire    ap_block_state57_pp0_stage0_iter55;
wire    ap_block_state58_pp0_stage0_iter56;
wire    ap_block_state59_pp0_stage0_iter57;
wire    ap_block_state60_pp0_stage0_iter58;
wire    ap_block_state61_pp0_stage0_iter59;
wire    ap_block_state62_pp0_stage0_iter60;
wire    ap_block_state63_pp0_stage0_iter61;
wire    ap_block_state64_pp0_stage0_iter62;
wire    ap_block_state65_pp0_stage0_iter63;
wire    ap_block_state66_pp0_stage0_iter64;
wire    ap_block_state67_pp0_stage0_iter65;
wire    ap_block_state68_pp0_stage0_iter66;
wire    ap_block_state69_pp0_stage0_iter67;
wire    ap_block_state70_pp0_stage0_iter68;
wire    ap_block_state71_pp0_stage0_iter69;
wire    ap_block_state72_pp0_stage0_iter70;
wire    ap_block_state73_pp0_stage0_iter71;
wire    ap_block_state74_pp0_stage0_iter72;
wire    ap_block_state75_pp0_stage0_iter73;
wire    ap_block_state76_pp0_stage0_iter74;
wire    ap_block_state77_pp0_stage0_iter75;
wire    ap_block_state78_pp0_stage0_iter76;
wire    ap_block_state79_pp0_stage0_iter77;
wire    ap_block_state80_pp0_stage0_iter78;
wire    ap_block_state81_pp0_stage0_iter79;
wire    ap_block_state82_pp0_stage0_iter80;
wire    ap_block_state83_pp0_stage0_iter81;
wire    ap_block_state84_pp0_stage0_iter82;
wire    ap_block_state85_pp0_stage0_iter83;
wire    ap_block_state86_pp0_stage0_iter84;
wire    ap_block_state87_pp0_stage0_iter85;
wire    ap_block_state88_pp0_stage0_iter86;
wire    ap_block_state89_pp0_stage0_iter87;
wire    ap_block_state90_pp0_stage0_iter88;
wire    ap_block_state91_pp0_stage0_iter89;
wire    ap_block_state92_pp0_stage0_iter90;
wire    ap_block_state93_pp0_stage0_iter91;
wire    ap_block_state94_pp0_stage0_iter92;
wire    ap_block_state95_pp0_stage0_iter93;
wire    ap_block_state96_pp0_stage0_iter94;
wire    ap_block_state97_pp0_stage0_iter95;
wire    ap_block_state98_pp0_stage0_iter96;
wire    ap_block_state99_pp0_stage0_iter97;
wire    ap_block_state100_pp0_stage0_iter98;
wire    ap_block_state101_pp0_stage0_iter99;
wire    ap_block_state102_pp0_stage0_iter100;
wire    ap_block_state103_pp0_stage0_iter101;
wire    ap_block_state104_pp0_stage0_iter102;
wire    ap_block_state105_pp0_stage0_iter103;
wire    ap_block_state106_pp0_stage0_iter104;
wire    ap_block_state107_pp0_stage0_iter105;
wire    ap_block_state108_pp0_stage0_iter106;
wire    ap_block_state109_pp0_stage0_iter107;
wire    ap_block_state110_pp0_stage0_iter108;
reg    ap_block_state111_pp0_stage0_iter109;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln887_reg_359_pp0_iter1_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter2_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter3_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter4_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter5_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter6_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter7_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter8_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter9_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter10_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter11_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter12_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter13_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter14_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter15_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter16_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter17_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter18_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter19_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter20_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter21_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter22_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter23_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter24_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter25_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter26_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter27_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter28_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter29_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter30_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter31_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter32_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter33_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter34_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter35_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter36_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter37_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter38_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter39_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter40_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter41_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter42_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter43_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter44_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter45_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter46_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter47_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter48_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter49_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter50_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter51_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter52_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter53_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter54_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter55_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter56_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter57_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter58_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter59_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter60_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter61_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter62_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter63_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter64_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter65_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter66_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter67_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter68_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter69_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter70_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter71_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter72_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter73_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter74_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter75_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter76_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter77_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter78_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter79_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter80_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter81_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter82_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter83_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter84_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter85_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter86_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter87_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter88_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter89_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter90_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter91_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter92_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter93_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter94_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter95_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter96_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter97_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter98_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter99_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter100_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter101_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter102_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter103_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter104_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter105_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter106_reg;
reg   [0:0] icmp_ln887_reg_359_pp0_iter107_reg;
wire   [16:0] add_ln887_fu_126_p2;
reg    ap_enable_reg_pp0_iter0;
reg  signed [31:0] tmp_V_reg_368;
reg  signed [31:0] tmp_V_reg_368_pp0_iter2_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter3_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter4_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter5_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter6_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter7_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter8_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter9_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter10_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter11_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter12_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter13_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter14_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter15_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter16_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter17_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter18_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter19_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter20_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter21_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter22_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter23_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter24_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter25_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter26_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter27_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter28_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter29_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter30_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter31_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter32_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter33_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter34_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter35_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter36_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter37_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter38_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter39_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter40_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter41_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter42_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter43_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter44_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter45_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter46_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter47_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter48_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter49_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter50_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter51_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter52_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter53_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter54_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter55_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter56_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter57_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter58_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter59_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter60_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter61_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter62_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter63_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter64_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter65_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter66_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter67_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter68_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter69_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter70_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter71_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter72_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter73_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter74_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter75_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter76_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter77_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter78_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter79_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter80_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter81_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter82_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter83_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter84_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter85_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter86_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter87_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter88_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter89_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter90_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter91_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter92_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter93_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter94_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter95_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter96_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter97_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter98_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter99_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter100_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter101_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter102_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter103_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter104_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter105_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter106_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter107_reg;
reg  signed [31:0] tmp_V_reg_368_pp0_iter108_reg;
wire  signed [47:0] sext_ln1148_fu_140_p1;
wire   [47:0] grp_fu_144_p2;
reg   [47:0] sdiv_ln1148_reg_389;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter53_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter54_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter55_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter56_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter57_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter58_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter59_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter60_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter61_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter62_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter63_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter64_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter65_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter66_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter67_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter68_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter69_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter70_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter71_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter72_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter73_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter74_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter75_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter76_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter77_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter78_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter79_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter80_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter81_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter82_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter83_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter84_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter85_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter86_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter87_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter88_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter89_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter90_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter91_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter92_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter93_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter94_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter95_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter96_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter97_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter98_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter99_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter100_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter101_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter102_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter103_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter104_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter105_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter106_reg;
reg   [47:0] sdiv_ln1148_reg_389_pp0_iter107_reg;
wire   [31:0] mean_I_V_fu_164_p1;
reg   [31:0] mean_I_V_reg_394;
wire   [47:0] grp_fu_158_p2;
reg   [47:0] sdiv_ln1148_1_reg_399;
reg   [47:0] sdiv_ln1148_1_reg_399_pp0_iter53_reg;
wire  signed [63:0] r_V_fu_168_p1;
reg  signed [63:0] r_V_reg_404;
reg  signed [63:0] r_V_reg_404_pp0_iter54_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter55_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter56_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter57_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter58_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter59_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter60_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter61_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter62_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter63_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter64_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter65_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter66_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter67_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter68_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter69_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter70_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter71_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter72_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter73_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter74_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter75_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter76_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter77_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter78_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter79_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter80_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter81_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter82_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter83_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter84_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter85_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter86_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter87_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter88_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter89_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter90_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter91_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter92_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter93_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter94_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter95_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter96_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter97_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter98_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter99_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter100_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter101_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter102_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter103_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter104_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter105_reg;
reg  signed [63:0] r_V_reg_404_pp0_iter106_reg;
wire   [63:0] r_V_5_fu_171_p2;
reg   [63:0] r_V_5_reg_409;
wire  signed [31:0] p_Val2_22_fu_243_p2;
reg  signed [31:0] p_Val2_22_reg_414;
wire   [31:0] grp_fu_269_p2;
reg   [31:0] sdiv_ln1148_2_reg_430;
wire  signed [31:0] my_a_V_fu_275_p1;
reg  signed [31:0] my_a_V_reg_435;
reg  signed [31:0] my_a_V_reg_435_pp0_iter108_reg;
wire   [63:0] r_V_6_fu_282_p2;
reg   [63:0] r_V_6_reg_440;
wire   [31:0] p_Val2_s_fu_353_p2;
reg   [31:0] p_Val2_s_reg_445;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_enable_reg_pp0_iter50;
reg    ap_enable_reg_pp0_iter51;
reg    ap_enable_reg_pp0_iter52;
reg    ap_enable_reg_pp0_iter53;
reg    ap_enable_reg_pp0_iter54;
reg    ap_enable_reg_pp0_iter55;
reg    ap_enable_reg_pp0_iter56;
reg    ap_enable_reg_pp0_iter57;
reg    ap_enable_reg_pp0_iter58;
reg    ap_enable_reg_pp0_iter59;
reg    ap_enable_reg_pp0_iter60;
reg    ap_enable_reg_pp0_iter61;
reg    ap_enable_reg_pp0_iter62;
reg    ap_enable_reg_pp0_iter63;
reg    ap_enable_reg_pp0_iter64;
reg    ap_enable_reg_pp0_iter65;
reg    ap_enable_reg_pp0_iter66;
reg    ap_enable_reg_pp0_iter67;
reg    ap_enable_reg_pp0_iter68;
reg    ap_enable_reg_pp0_iter69;
reg    ap_enable_reg_pp0_iter70;
reg    ap_enable_reg_pp0_iter71;
reg    ap_enable_reg_pp0_iter72;
reg    ap_enable_reg_pp0_iter73;
reg    ap_enable_reg_pp0_iter74;
reg    ap_enable_reg_pp0_iter75;
reg    ap_enable_reg_pp0_iter76;
reg    ap_enable_reg_pp0_iter77;
reg    ap_enable_reg_pp0_iter78;
reg    ap_enable_reg_pp0_iter79;
reg    ap_enable_reg_pp0_iter80;
reg    ap_enable_reg_pp0_iter81;
reg    ap_enable_reg_pp0_iter82;
reg    ap_enable_reg_pp0_iter83;
reg    ap_enable_reg_pp0_iter84;
reg    ap_enable_reg_pp0_iter85;
reg    ap_enable_reg_pp0_iter86;
reg    ap_enable_reg_pp0_iter87;
reg    ap_enable_reg_pp0_iter88;
reg    ap_enable_reg_pp0_iter89;
reg    ap_enable_reg_pp0_iter90;
reg    ap_enable_reg_pp0_iter91;
reg    ap_enable_reg_pp0_iter92;
reg    ap_enable_reg_pp0_iter93;
reg    ap_enable_reg_pp0_iter94;
reg    ap_enable_reg_pp0_iter95;
reg    ap_enable_reg_pp0_iter96;
reg    ap_enable_reg_pp0_iter97;
reg    ap_enable_reg_pp0_iter98;
reg    ap_enable_reg_pp0_iter99;
reg    ap_enable_reg_pp0_iter100;
reg    ap_enable_reg_pp0_iter101;
reg    ap_enable_reg_pp0_iter102;
reg    ap_enable_reg_pp0_iter103;
reg    ap_enable_reg_pp0_iter104;
reg    ap_enable_reg_pp0_iter105;
reg    ap_enable_reg_pp0_iter106;
reg    ap_enable_reg_pp0_iter107;
reg    ap_enable_reg_pp0_iter108;
reg    ap_block_pp0_stage0_01001;
wire  signed [31:0] sext_ln1148_fu_140_p0;
wire   [47:0] grp_fu_144_p0;
wire  signed [31:0] grp_fu_144_p1;
wire   [47:0] grp_fu_158_p0;
wire  signed [31:0] grp_fu_158_p1;
wire  signed [31:0] r_V_5_fu_171_p0;
wire  signed [31:0] r_V_5_fu_171_p1;
wire   [47:0] lhs_V_fu_177_p2;
wire  signed [63:0] sext_ln728_fu_182_p1;
wire   [63:0] ret_V_11_fu_186_p2;
wire   [14:0] trunc_ln718_fu_209_p1;
wire   [0:0] r_fu_213_p2;
wire   [0:0] tmp_fu_201_p3;
wire   [0:0] or_ln412_fu_219_p2;
wire   [0:0] tmp_25_fu_225_p3;
wire   [0:0] and_ln412_fu_233_p2;
wire   [31:0] p_Val2_20_fu_191_p4;
wire   [31:0] zext_ln412_fu_239_p1;
wire  signed [32:0] lhs_V_2_fu_249_p1;
wire  signed [32:0] ret_V_fu_252_p2;
wire   [47:0] grp_fu_269_p0;
wire  signed [31:0] r_V_6_fu_282_p0;
wire  signed [31:0] r_V_6_fu_282_p1;
wire   [47:0] lhs_V_3_fu_287_p2;
wire  signed [63:0] sext_ln728_1_fu_292_p1;
wire   [63:0] ret_V_12_fu_296_p2;
wire   [14:0] trunc_ln718_1_fu_319_p1;
wire   [0:0] r_2_fu_323_p2;
wire   [0:0] tmp_26_fu_311_p3;
wire   [0:0] or_ln412_1_fu_329_p2;
wire   [0:0] tmp_27_fu_335_p3;
wire   [0:0] and_ln412_1_fu_343_p2;
wire   [31:0] p_Val2_26_fu_301_p4;
wire   [31:0] zext_ln412_1_fu_349_p1;
reg    grp_fu_144_ce;
reg    grp_fu_158_ce;
reg    grp_fu_269_ce;
wire    ap_CS_fsm_state112;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter109 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 ap_enable_reg_pp0_iter50 = 1'b0;
#0 ap_enable_reg_pp0_iter51 = 1'b0;
#0 ap_enable_reg_pp0_iter52 = 1'b0;
#0 ap_enable_reg_pp0_iter53 = 1'b0;
#0 ap_enable_reg_pp0_iter54 = 1'b0;
#0 ap_enable_reg_pp0_iter55 = 1'b0;
#0 ap_enable_reg_pp0_iter56 = 1'b0;
#0 ap_enable_reg_pp0_iter57 = 1'b0;
#0 ap_enable_reg_pp0_iter58 = 1'b0;
#0 ap_enable_reg_pp0_iter59 = 1'b0;
#0 ap_enable_reg_pp0_iter60 = 1'b0;
#0 ap_enable_reg_pp0_iter61 = 1'b0;
#0 ap_enable_reg_pp0_iter62 = 1'b0;
#0 ap_enable_reg_pp0_iter63 = 1'b0;
#0 ap_enable_reg_pp0_iter64 = 1'b0;
#0 ap_enable_reg_pp0_iter65 = 1'b0;
#0 ap_enable_reg_pp0_iter66 = 1'b0;
#0 ap_enable_reg_pp0_iter67 = 1'b0;
#0 ap_enable_reg_pp0_iter68 = 1'b0;
#0 ap_enable_reg_pp0_iter69 = 1'b0;
#0 ap_enable_reg_pp0_iter70 = 1'b0;
#0 ap_enable_reg_pp0_iter71 = 1'b0;
#0 ap_enable_reg_pp0_iter72 = 1'b0;
#0 ap_enable_reg_pp0_iter73 = 1'b0;
#0 ap_enable_reg_pp0_iter74 = 1'b0;
#0 ap_enable_reg_pp0_iter75 = 1'b0;
#0 ap_enable_reg_pp0_iter76 = 1'b0;
#0 ap_enable_reg_pp0_iter77 = 1'b0;
#0 ap_enable_reg_pp0_iter78 = 1'b0;
#0 ap_enable_reg_pp0_iter79 = 1'b0;
#0 ap_enable_reg_pp0_iter80 = 1'b0;
#0 ap_enable_reg_pp0_iter81 = 1'b0;
#0 ap_enable_reg_pp0_iter82 = 1'b0;
#0 ap_enable_reg_pp0_iter83 = 1'b0;
#0 ap_enable_reg_pp0_iter84 = 1'b0;
#0 ap_enable_reg_pp0_iter85 = 1'b0;
#0 ap_enable_reg_pp0_iter86 = 1'b0;
#0 ap_enable_reg_pp0_iter87 = 1'b0;
#0 ap_enable_reg_pp0_iter88 = 1'b0;
#0 ap_enable_reg_pp0_iter89 = 1'b0;
#0 ap_enable_reg_pp0_iter90 = 1'b0;
#0 ap_enable_reg_pp0_iter91 = 1'b0;
#0 ap_enable_reg_pp0_iter92 = 1'b0;
#0 ap_enable_reg_pp0_iter93 = 1'b0;
#0 ap_enable_reg_pp0_iter94 = 1'b0;
#0 ap_enable_reg_pp0_iter95 = 1'b0;
#0 ap_enable_reg_pp0_iter96 = 1'b0;
#0 ap_enable_reg_pp0_iter97 = 1'b0;
#0 ap_enable_reg_pp0_iter98 = 1'b0;
#0 ap_enable_reg_pp0_iter99 = 1'b0;
#0 ap_enable_reg_pp0_iter100 = 1'b0;
#0 ap_enable_reg_pp0_iter101 = 1'b0;
#0 ap_enable_reg_pp0_iter102 = 1'b0;
#0 ap_enable_reg_pp0_iter103 = 1'b0;
#0 ap_enable_reg_pp0_iter104 = 1'b0;
#0 ap_enable_reg_pp0_iter105 = 1'b0;
#0 ap_enable_reg_pp0_iter106 = 1'b0;
#0 ap_enable_reg_pp0_iter107 = 1'b0;
#0 ap_enable_reg_pp0_iter108 = 1'b0;
end

net_holes_detectibNq #(
    .ID( 1 ),
    .NUM_STAGE( 52 ),
    .din0_WIDTH( 48 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
net_holes_detectibNq_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_144_p0),
    .din1(grp_fu_144_p1),
    .ce(grp_fu_144_ce),
    .dout(grp_fu_144_p2)
);

net_holes_detectibNq #(
    .ID( 1 ),
    .NUM_STAGE( 52 ),
    .din0_WIDTH( 48 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
net_holes_detectibNq_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_158_p0),
    .din1(grp_fu_158_p1),
    .ce(grp_fu_158_ce),
    .dout(grp_fu_158_p2)
);

net_holes_detectibOq #(
    .ID( 1 ),
    .NUM_STAGE( 52 ),
    .din0_WIDTH( 48 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 32 ))
net_holes_detectibOq_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_269_p0),
    .din1(ret_V_fu_252_p2),
    .ce(grp_fu_269_ce),
    .dout(grp_fu_269_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state112)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter100 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter100 <= ap_enable_reg_pp0_iter99;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter101 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter101 <= ap_enable_reg_pp0_iter100;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter102 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter102 <= ap_enable_reg_pp0_iter101;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter103 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter103 <= ap_enable_reg_pp0_iter102;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter104 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter104 <= ap_enable_reg_pp0_iter103;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter105 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter105 <= ap_enable_reg_pp0_iter104;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter106 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter106 <= ap_enable_reg_pp0_iter105;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter107 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter107 <= ap_enable_reg_pp0_iter106;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter108 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter108 <= ap_enable_reg_pp0_iter107;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter109 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter109 <= ap_enable_reg_pp0_iter108;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter109 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter52 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter53 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter54 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter54 <= ap_enable_reg_pp0_iter53;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter55 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter55 <= ap_enable_reg_pp0_iter54;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter56 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter56 <= ap_enable_reg_pp0_iter55;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter57 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter57 <= ap_enable_reg_pp0_iter56;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter58 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter58 <= ap_enable_reg_pp0_iter57;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter59 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter59 <= ap_enable_reg_pp0_iter58;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter60 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter60 <= ap_enable_reg_pp0_iter59;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter61 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter61 <= ap_enable_reg_pp0_iter60;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter62 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter62 <= ap_enable_reg_pp0_iter61;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter63 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter63 <= ap_enable_reg_pp0_iter62;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter64 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter64 <= ap_enable_reg_pp0_iter63;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter65 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter65 <= ap_enable_reg_pp0_iter64;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter66 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter66 <= ap_enable_reg_pp0_iter65;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter67 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter67 <= ap_enable_reg_pp0_iter66;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter68 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter68 <= ap_enable_reg_pp0_iter67;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter69 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter69 <= ap_enable_reg_pp0_iter68;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter70 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter70 <= ap_enable_reg_pp0_iter69;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter71 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter71 <= ap_enable_reg_pp0_iter70;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter72 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter72 <= ap_enable_reg_pp0_iter71;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter73 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter73 <= ap_enable_reg_pp0_iter72;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter74 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter74 <= ap_enable_reg_pp0_iter73;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter75 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter75 <= ap_enable_reg_pp0_iter74;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter76 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter76 <= ap_enable_reg_pp0_iter75;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter77 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter77 <= ap_enable_reg_pp0_iter76;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter78 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter78 <= ap_enable_reg_pp0_iter77;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter79 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter79 <= ap_enable_reg_pp0_iter78;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter80 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter80 <= ap_enable_reg_pp0_iter79;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter81 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter81 <= ap_enable_reg_pp0_iter80;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter82 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter82 <= ap_enable_reg_pp0_iter81;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter83 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter83 <= ap_enable_reg_pp0_iter82;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter84 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter84 <= ap_enable_reg_pp0_iter83;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter85 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter85 <= ap_enable_reg_pp0_iter84;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter86 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter86 <= ap_enable_reg_pp0_iter85;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter87 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter87 <= ap_enable_reg_pp0_iter86;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter88 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter88 <= ap_enable_reg_pp0_iter87;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter89 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter89 <= ap_enable_reg_pp0_iter88;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter90 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter90 <= ap_enable_reg_pp0_iter89;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter91 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter91 <= ap_enable_reg_pp0_iter90;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter92 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter92 <= ap_enable_reg_pp0_iter91;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter93 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter93 <= ap_enable_reg_pp0_iter92;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter94 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter94 <= ap_enable_reg_pp0_iter93;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter95 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter95 <= ap_enable_reg_pp0_iter94;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter96 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter96 <= ap_enable_reg_pp0_iter95;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter97 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter97 <= ap_enable_reg_pp0_iter96;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter98 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter98 <= ap_enable_reg_pp0_iter97;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter99 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter99 <= ap_enable_reg_pp0_iter98;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_fu_120_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        indvar_flatten_reg_109 <= add_ln887_fu_126_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_109 <= 17'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln887_reg_359 <= icmp_ln887_fu_120_p2;
        icmp_ln887_reg_359_pp0_iter1_reg <= icmp_ln887_reg_359;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln887_reg_359_pp0_iter100_reg <= icmp_ln887_reg_359_pp0_iter99_reg;
        icmp_ln887_reg_359_pp0_iter101_reg <= icmp_ln887_reg_359_pp0_iter100_reg;
        icmp_ln887_reg_359_pp0_iter102_reg <= icmp_ln887_reg_359_pp0_iter101_reg;
        icmp_ln887_reg_359_pp0_iter103_reg <= icmp_ln887_reg_359_pp0_iter102_reg;
        icmp_ln887_reg_359_pp0_iter104_reg <= icmp_ln887_reg_359_pp0_iter103_reg;
        icmp_ln887_reg_359_pp0_iter105_reg <= icmp_ln887_reg_359_pp0_iter104_reg;
        icmp_ln887_reg_359_pp0_iter106_reg <= icmp_ln887_reg_359_pp0_iter105_reg;
        icmp_ln887_reg_359_pp0_iter107_reg <= icmp_ln887_reg_359_pp0_iter106_reg;
        icmp_ln887_reg_359_pp0_iter108_reg <= icmp_ln887_reg_359_pp0_iter107_reg;
        icmp_ln887_reg_359_pp0_iter10_reg <= icmp_ln887_reg_359_pp0_iter9_reg;
        icmp_ln887_reg_359_pp0_iter11_reg <= icmp_ln887_reg_359_pp0_iter10_reg;
        icmp_ln887_reg_359_pp0_iter12_reg <= icmp_ln887_reg_359_pp0_iter11_reg;
        icmp_ln887_reg_359_pp0_iter13_reg <= icmp_ln887_reg_359_pp0_iter12_reg;
        icmp_ln887_reg_359_pp0_iter14_reg <= icmp_ln887_reg_359_pp0_iter13_reg;
        icmp_ln887_reg_359_pp0_iter15_reg <= icmp_ln887_reg_359_pp0_iter14_reg;
        icmp_ln887_reg_359_pp0_iter16_reg <= icmp_ln887_reg_359_pp0_iter15_reg;
        icmp_ln887_reg_359_pp0_iter17_reg <= icmp_ln887_reg_359_pp0_iter16_reg;
        icmp_ln887_reg_359_pp0_iter18_reg <= icmp_ln887_reg_359_pp0_iter17_reg;
        icmp_ln887_reg_359_pp0_iter19_reg <= icmp_ln887_reg_359_pp0_iter18_reg;
        icmp_ln887_reg_359_pp0_iter20_reg <= icmp_ln887_reg_359_pp0_iter19_reg;
        icmp_ln887_reg_359_pp0_iter21_reg <= icmp_ln887_reg_359_pp0_iter20_reg;
        icmp_ln887_reg_359_pp0_iter22_reg <= icmp_ln887_reg_359_pp0_iter21_reg;
        icmp_ln887_reg_359_pp0_iter23_reg <= icmp_ln887_reg_359_pp0_iter22_reg;
        icmp_ln887_reg_359_pp0_iter24_reg <= icmp_ln887_reg_359_pp0_iter23_reg;
        icmp_ln887_reg_359_pp0_iter25_reg <= icmp_ln887_reg_359_pp0_iter24_reg;
        icmp_ln887_reg_359_pp0_iter26_reg <= icmp_ln887_reg_359_pp0_iter25_reg;
        icmp_ln887_reg_359_pp0_iter27_reg <= icmp_ln887_reg_359_pp0_iter26_reg;
        icmp_ln887_reg_359_pp0_iter28_reg <= icmp_ln887_reg_359_pp0_iter27_reg;
        icmp_ln887_reg_359_pp0_iter29_reg <= icmp_ln887_reg_359_pp0_iter28_reg;
        icmp_ln887_reg_359_pp0_iter2_reg <= icmp_ln887_reg_359_pp0_iter1_reg;
        icmp_ln887_reg_359_pp0_iter30_reg <= icmp_ln887_reg_359_pp0_iter29_reg;
        icmp_ln887_reg_359_pp0_iter31_reg <= icmp_ln887_reg_359_pp0_iter30_reg;
        icmp_ln887_reg_359_pp0_iter32_reg <= icmp_ln887_reg_359_pp0_iter31_reg;
        icmp_ln887_reg_359_pp0_iter33_reg <= icmp_ln887_reg_359_pp0_iter32_reg;
        icmp_ln887_reg_359_pp0_iter34_reg <= icmp_ln887_reg_359_pp0_iter33_reg;
        icmp_ln887_reg_359_pp0_iter35_reg <= icmp_ln887_reg_359_pp0_iter34_reg;
        icmp_ln887_reg_359_pp0_iter36_reg <= icmp_ln887_reg_359_pp0_iter35_reg;
        icmp_ln887_reg_359_pp0_iter37_reg <= icmp_ln887_reg_359_pp0_iter36_reg;
        icmp_ln887_reg_359_pp0_iter38_reg <= icmp_ln887_reg_359_pp0_iter37_reg;
        icmp_ln887_reg_359_pp0_iter39_reg <= icmp_ln887_reg_359_pp0_iter38_reg;
        icmp_ln887_reg_359_pp0_iter3_reg <= icmp_ln887_reg_359_pp0_iter2_reg;
        icmp_ln887_reg_359_pp0_iter40_reg <= icmp_ln887_reg_359_pp0_iter39_reg;
        icmp_ln887_reg_359_pp0_iter41_reg <= icmp_ln887_reg_359_pp0_iter40_reg;
        icmp_ln887_reg_359_pp0_iter42_reg <= icmp_ln887_reg_359_pp0_iter41_reg;
        icmp_ln887_reg_359_pp0_iter43_reg <= icmp_ln887_reg_359_pp0_iter42_reg;
        icmp_ln887_reg_359_pp0_iter44_reg <= icmp_ln887_reg_359_pp0_iter43_reg;
        icmp_ln887_reg_359_pp0_iter45_reg <= icmp_ln887_reg_359_pp0_iter44_reg;
        icmp_ln887_reg_359_pp0_iter46_reg <= icmp_ln887_reg_359_pp0_iter45_reg;
        icmp_ln887_reg_359_pp0_iter47_reg <= icmp_ln887_reg_359_pp0_iter46_reg;
        icmp_ln887_reg_359_pp0_iter48_reg <= icmp_ln887_reg_359_pp0_iter47_reg;
        icmp_ln887_reg_359_pp0_iter49_reg <= icmp_ln887_reg_359_pp0_iter48_reg;
        icmp_ln887_reg_359_pp0_iter4_reg <= icmp_ln887_reg_359_pp0_iter3_reg;
        icmp_ln887_reg_359_pp0_iter50_reg <= icmp_ln887_reg_359_pp0_iter49_reg;
        icmp_ln887_reg_359_pp0_iter51_reg <= icmp_ln887_reg_359_pp0_iter50_reg;
        icmp_ln887_reg_359_pp0_iter52_reg <= icmp_ln887_reg_359_pp0_iter51_reg;
        icmp_ln887_reg_359_pp0_iter53_reg <= icmp_ln887_reg_359_pp0_iter52_reg;
        icmp_ln887_reg_359_pp0_iter54_reg <= icmp_ln887_reg_359_pp0_iter53_reg;
        icmp_ln887_reg_359_pp0_iter55_reg <= icmp_ln887_reg_359_pp0_iter54_reg;
        icmp_ln887_reg_359_pp0_iter56_reg <= icmp_ln887_reg_359_pp0_iter55_reg;
        icmp_ln887_reg_359_pp0_iter57_reg <= icmp_ln887_reg_359_pp0_iter56_reg;
        icmp_ln887_reg_359_pp0_iter58_reg <= icmp_ln887_reg_359_pp0_iter57_reg;
        icmp_ln887_reg_359_pp0_iter59_reg <= icmp_ln887_reg_359_pp0_iter58_reg;
        icmp_ln887_reg_359_pp0_iter5_reg <= icmp_ln887_reg_359_pp0_iter4_reg;
        icmp_ln887_reg_359_pp0_iter60_reg <= icmp_ln887_reg_359_pp0_iter59_reg;
        icmp_ln887_reg_359_pp0_iter61_reg <= icmp_ln887_reg_359_pp0_iter60_reg;
        icmp_ln887_reg_359_pp0_iter62_reg <= icmp_ln887_reg_359_pp0_iter61_reg;
        icmp_ln887_reg_359_pp0_iter63_reg <= icmp_ln887_reg_359_pp0_iter62_reg;
        icmp_ln887_reg_359_pp0_iter64_reg <= icmp_ln887_reg_359_pp0_iter63_reg;
        icmp_ln887_reg_359_pp0_iter65_reg <= icmp_ln887_reg_359_pp0_iter64_reg;
        icmp_ln887_reg_359_pp0_iter66_reg <= icmp_ln887_reg_359_pp0_iter65_reg;
        icmp_ln887_reg_359_pp0_iter67_reg <= icmp_ln887_reg_359_pp0_iter66_reg;
        icmp_ln887_reg_359_pp0_iter68_reg <= icmp_ln887_reg_359_pp0_iter67_reg;
        icmp_ln887_reg_359_pp0_iter69_reg <= icmp_ln887_reg_359_pp0_iter68_reg;
        icmp_ln887_reg_359_pp0_iter6_reg <= icmp_ln887_reg_359_pp0_iter5_reg;
        icmp_ln887_reg_359_pp0_iter70_reg <= icmp_ln887_reg_359_pp0_iter69_reg;
        icmp_ln887_reg_359_pp0_iter71_reg <= icmp_ln887_reg_359_pp0_iter70_reg;
        icmp_ln887_reg_359_pp0_iter72_reg <= icmp_ln887_reg_359_pp0_iter71_reg;
        icmp_ln887_reg_359_pp0_iter73_reg <= icmp_ln887_reg_359_pp0_iter72_reg;
        icmp_ln887_reg_359_pp0_iter74_reg <= icmp_ln887_reg_359_pp0_iter73_reg;
        icmp_ln887_reg_359_pp0_iter75_reg <= icmp_ln887_reg_359_pp0_iter74_reg;
        icmp_ln887_reg_359_pp0_iter76_reg <= icmp_ln887_reg_359_pp0_iter75_reg;
        icmp_ln887_reg_359_pp0_iter77_reg <= icmp_ln887_reg_359_pp0_iter76_reg;
        icmp_ln887_reg_359_pp0_iter78_reg <= icmp_ln887_reg_359_pp0_iter77_reg;
        icmp_ln887_reg_359_pp0_iter79_reg <= icmp_ln887_reg_359_pp0_iter78_reg;
        icmp_ln887_reg_359_pp0_iter7_reg <= icmp_ln887_reg_359_pp0_iter6_reg;
        icmp_ln887_reg_359_pp0_iter80_reg <= icmp_ln887_reg_359_pp0_iter79_reg;
        icmp_ln887_reg_359_pp0_iter81_reg <= icmp_ln887_reg_359_pp0_iter80_reg;
        icmp_ln887_reg_359_pp0_iter82_reg <= icmp_ln887_reg_359_pp0_iter81_reg;
        icmp_ln887_reg_359_pp0_iter83_reg <= icmp_ln887_reg_359_pp0_iter82_reg;
        icmp_ln887_reg_359_pp0_iter84_reg <= icmp_ln887_reg_359_pp0_iter83_reg;
        icmp_ln887_reg_359_pp0_iter85_reg <= icmp_ln887_reg_359_pp0_iter84_reg;
        icmp_ln887_reg_359_pp0_iter86_reg <= icmp_ln887_reg_359_pp0_iter85_reg;
        icmp_ln887_reg_359_pp0_iter87_reg <= icmp_ln887_reg_359_pp0_iter86_reg;
        icmp_ln887_reg_359_pp0_iter88_reg <= icmp_ln887_reg_359_pp0_iter87_reg;
        icmp_ln887_reg_359_pp0_iter89_reg <= icmp_ln887_reg_359_pp0_iter88_reg;
        icmp_ln887_reg_359_pp0_iter8_reg <= icmp_ln887_reg_359_pp0_iter7_reg;
        icmp_ln887_reg_359_pp0_iter90_reg <= icmp_ln887_reg_359_pp0_iter89_reg;
        icmp_ln887_reg_359_pp0_iter91_reg <= icmp_ln887_reg_359_pp0_iter90_reg;
        icmp_ln887_reg_359_pp0_iter92_reg <= icmp_ln887_reg_359_pp0_iter91_reg;
        icmp_ln887_reg_359_pp0_iter93_reg <= icmp_ln887_reg_359_pp0_iter92_reg;
        icmp_ln887_reg_359_pp0_iter94_reg <= icmp_ln887_reg_359_pp0_iter93_reg;
        icmp_ln887_reg_359_pp0_iter95_reg <= icmp_ln887_reg_359_pp0_iter94_reg;
        icmp_ln887_reg_359_pp0_iter96_reg <= icmp_ln887_reg_359_pp0_iter95_reg;
        icmp_ln887_reg_359_pp0_iter97_reg <= icmp_ln887_reg_359_pp0_iter96_reg;
        icmp_ln887_reg_359_pp0_iter98_reg <= icmp_ln887_reg_359_pp0_iter97_reg;
        icmp_ln887_reg_359_pp0_iter99_reg <= icmp_ln887_reg_359_pp0_iter98_reg;
        icmp_ln887_reg_359_pp0_iter9_reg <= icmp_ln887_reg_359_pp0_iter8_reg;
        my_a_V_reg_435_pp0_iter108_reg <= my_a_V_reg_435;
        r_V_reg_404_pp0_iter100_reg <= r_V_reg_404_pp0_iter99_reg;
        r_V_reg_404_pp0_iter101_reg <= r_V_reg_404_pp0_iter100_reg;
        r_V_reg_404_pp0_iter102_reg <= r_V_reg_404_pp0_iter101_reg;
        r_V_reg_404_pp0_iter103_reg <= r_V_reg_404_pp0_iter102_reg;
        r_V_reg_404_pp0_iter104_reg <= r_V_reg_404_pp0_iter103_reg;
        r_V_reg_404_pp0_iter105_reg <= r_V_reg_404_pp0_iter104_reg;
        r_V_reg_404_pp0_iter106_reg <= r_V_reg_404_pp0_iter105_reg;
        r_V_reg_404_pp0_iter54_reg <= r_V_reg_404;
        r_V_reg_404_pp0_iter55_reg <= r_V_reg_404_pp0_iter54_reg;
        r_V_reg_404_pp0_iter56_reg <= r_V_reg_404_pp0_iter55_reg;
        r_V_reg_404_pp0_iter57_reg <= r_V_reg_404_pp0_iter56_reg;
        r_V_reg_404_pp0_iter58_reg <= r_V_reg_404_pp0_iter57_reg;
        r_V_reg_404_pp0_iter59_reg <= r_V_reg_404_pp0_iter58_reg;
        r_V_reg_404_pp0_iter60_reg <= r_V_reg_404_pp0_iter59_reg;
        r_V_reg_404_pp0_iter61_reg <= r_V_reg_404_pp0_iter60_reg;
        r_V_reg_404_pp0_iter62_reg <= r_V_reg_404_pp0_iter61_reg;
        r_V_reg_404_pp0_iter63_reg <= r_V_reg_404_pp0_iter62_reg;
        r_V_reg_404_pp0_iter64_reg <= r_V_reg_404_pp0_iter63_reg;
        r_V_reg_404_pp0_iter65_reg <= r_V_reg_404_pp0_iter64_reg;
        r_V_reg_404_pp0_iter66_reg <= r_V_reg_404_pp0_iter65_reg;
        r_V_reg_404_pp0_iter67_reg <= r_V_reg_404_pp0_iter66_reg;
        r_V_reg_404_pp0_iter68_reg <= r_V_reg_404_pp0_iter67_reg;
        r_V_reg_404_pp0_iter69_reg <= r_V_reg_404_pp0_iter68_reg;
        r_V_reg_404_pp0_iter70_reg <= r_V_reg_404_pp0_iter69_reg;
        r_V_reg_404_pp0_iter71_reg <= r_V_reg_404_pp0_iter70_reg;
        r_V_reg_404_pp0_iter72_reg <= r_V_reg_404_pp0_iter71_reg;
        r_V_reg_404_pp0_iter73_reg <= r_V_reg_404_pp0_iter72_reg;
        r_V_reg_404_pp0_iter74_reg <= r_V_reg_404_pp0_iter73_reg;
        r_V_reg_404_pp0_iter75_reg <= r_V_reg_404_pp0_iter74_reg;
        r_V_reg_404_pp0_iter76_reg <= r_V_reg_404_pp0_iter75_reg;
        r_V_reg_404_pp0_iter77_reg <= r_V_reg_404_pp0_iter76_reg;
        r_V_reg_404_pp0_iter78_reg <= r_V_reg_404_pp0_iter77_reg;
        r_V_reg_404_pp0_iter79_reg <= r_V_reg_404_pp0_iter78_reg;
        r_V_reg_404_pp0_iter80_reg <= r_V_reg_404_pp0_iter79_reg;
        r_V_reg_404_pp0_iter81_reg <= r_V_reg_404_pp0_iter80_reg;
        r_V_reg_404_pp0_iter82_reg <= r_V_reg_404_pp0_iter81_reg;
        r_V_reg_404_pp0_iter83_reg <= r_V_reg_404_pp0_iter82_reg;
        r_V_reg_404_pp0_iter84_reg <= r_V_reg_404_pp0_iter83_reg;
        r_V_reg_404_pp0_iter85_reg <= r_V_reg_404_pp0_iter84_reg;
        r_V_reg_404_pp0_iter86_reg <= r_V_reg_404_pp0_iter85_reg;
        r_V_reg_404_pp0_iter87_reg <= r_V_reg_404_pp0_iter86_reg;
        r_V_reg_404_pp0_iter88_reg <= r_V_reg_404_pp0_iter87_reg;
        r_V_reg_404_pp0_iter89_reg <= r_V_reg_404_pp0_iter88_reg;
        r_V_reg_404_pp0_iter90_reg <= r_V_reg_404_pp0_iter89_reg;
        r_V_reg_404_pp0_iter91_reg <= r_V_reg_404_pp0_iter90_reg;
        r_V_reg_404_pp0_iter92_reg <= r_V_reg_404_pp0_iter91_reg;
        r_V_reg_404_pp0_iter93_reg <= r_V_reg_404_pp0_iter92_reg;
        r_V_reg_404_pp0_iter94_reg <= r_V_reg_404_pp0_iter93_reg;
        r_V_reg_404_pp0_iter95_reg <= r_V_reg_404_pp0_iter94_reg;
        r_V_reg_404_pp0_iter96_reg <= r_V_reg_404_pp0_iter95_reg;
        r_V_reg_404_pp0_iter97_reg <= r_V_reg_404_pp0_iter96_reg;
        r_V_reg_404_pp0_iter98_reg <= r_V_reg_404_pp0_iter97_reg;
        r_V_reg_404_pp0_iter99_reg <= r_V_reg_404_pp0_iter98_reg;
        sdiv_ln1148_1_reg_399_pp0_iter53_reg <= sdiv_ln1148_1_reg_399;
        sdiv_ln1148_reg_389_pp0_iter100_reg <= sdiv_ln1148_reg_389_pp0_iter99_reg;
        sdiv_ln1148_reg_389_pp0_iter101_reg <= sdiv_ln1148_reg_389_pp0_iter100_reg;
        sdiv_ln1148_reg_389_pp0_iter102_reg <= sdiv_ln1148_reg_389_pp0_iter101_reg;
        sdiv_ln1148_reg_389_pp0_iter103_reg <= sdiv_ln1148_reg_389_pp0_iter102_reg;
        sdiv_ln1148_reg_389_pp0_iter104_reg <= sdiv_ln1148_reg_389_pp0_iter103_reg;
        sdiv_ln1148_reg_389_pp0_iter105_reg <= sdiv_ln1148_reg_389_pp0_iter104_reg;
        sdiv_ln1148_reg_389_pp0_iter106_reg <= sdiv_ln1148_reg_389_pp0_iter105_reg;
        sdiv_ln1148_reg_389_pp0_iter107_reg <= sdiv_ln1148_reg_389_pp0_iter106_reg;
        sdiv_ln1148_reg_389_pp0_iter53_reg <= sdiv_ln1148_reg_389;
        sdiv_ln1148_reg_389_pp0_iter54_reg <= sdiv_ln1148_reg_389_pp0_iter53_reg;
        sdiv_ln1148_reg_389_pp0_iter55_reg <= sdiv_ln1148_reg_389_pp0_iter54_reg;
        sdiv_ln1148_reg_389_pp0_iter56_reg <= sdiv_ln1148_reg_389_pp0_iter55_reg;
        sdiv_ln1148_reg_389_pp0_iter57_reg <= sdiv_ln1148_reg_389_pp0_iter56_reg;
        sdiv_ln1148_reg_389_pp0_iter58_reg <= sdiv_ln1148_reg_389_pp0_iter57_reg;
        sdiv_ln1148_reg_389_pp0_iter59_reg <= sdiv_ln1148_reg_389_pp0_iter58_reg;
        sdiv_ln1148_reg_389_pp0_iter60_reg <= sdiv_ln1148_reg_389_pp0_iter59_reg;
        sdiv_ln1148_reg_389_pp0_iter61_reg <= sdiv_ln1148_reg_389_pp0_iter60_reg;
        sdiv_ln1148_reg_389_pp0_iter62_reg <= sdiv_ln1148_reg_389_pp0_iter61_reg;
        sdiv_ln1148_reg_389_pp0_iter63_reg <= sdiv_ln1148_reg_389_pp0_iter62_reg;
        sdiv_ln1148_reg_389_pp0_iter64_reg <= sdiv_ln1148_reg_389_pp0_iter63_reg;
        sdiv_ln1148_reg_389_pp0_iter65_reg <= sdiv_ln1148_reg_389_pp0_iter64_reg;
        sdiv_ln1148_reg_389_pp0_iter66_reg <= sdiv_ln1148_reg_389_pp0_iter65_reg;
        sdiv_ln1148_reg_389_pp0_iter67_reg <= sdiv_ln1148_reg_389_pp0_iter66_reg;
        sdiv_ln1148_reg_389_pp0_iter68_reg <= sdiv_ln1148_reg_389_pp0_iter67_reg;
        sdiv_ln1148_reg_389_pp0_iter69_reg <= sdiv_ln1148_reg_389_pp0_iter68_reg;
        sdiv_ln1148_reg_389_pp0_iter70_reg <= sdiv_ln1148_reg_389_pp0_iter69_reg;
        sdiv_ln1148_reg_389_pp0_iter71_reg <= sdiv_ln1148_reg_389_pp0_iter70_reg;
        sdiv_ln1148_reg_389_pp0_iter72_reg <= sdiv_ln1148_reg_389_pp0_iter71_reg;
        sdiv_ln1148_reg_389_pp0_iter73_reg <= sdiv_ln1148_reg_389_pp0_iter72_reg;
        sdiv_ln1148_reg_389_pp0_iter74_reg <= sdiv_ln1148_reg_389_pp0_iter73_reg;
        sdiv_ln1148_reg_389_pp0_iter75_reg <= sdiv_ln1148_reg_389_pp0_iter74_reg;
        sdiv_ln1148_reg_389_pp0_iter76_reg <= sdiv_ln1148_reg_389_pp0_iter75_reg;
        sdiv_ln1148_reg_389_pp0_iter77_reg <= sdiv_ln1148_reg_389_pp0_iter76_reg;
        sdiv_ln1148_reg_389_pp0_iter78_reg <= sdiv_ln1148_reg_389_pp0_iter77_reg;
        sdiv_ln1148_reg_389_pp0_iter79_reg <= sdiv_ln1148_reg_389_pp0_iter78_reg;
        sdiv_ln1148_reg_389_pp0_iter80_reg <= sdiv_ln1148_reg_389_pp0_iter79_reg;
        sdiv_ln1148_reg_389_pp0_iter81_reg <= sdiv_ln1148_reg_389_pp0_iter80_reg;
        sdiv_ln1148_reg_389_pp0_iter82_reg <= sdiv_ln1148_reg_389_pp0_iter81_reg;
        sdiv_ln1148_reg_389_pp0_iter83_reg <= sdiv_ln1148_reg_389_pp0_iter82_reg;
        sdiv_ln1148_reg_389_pp0_iter84_reg <= sdiv_ln1148_reg_389_pp0_iter83_reg;
        sdiv_ln1148_reg_389_pp0_iter85_reg <= sdiv_ln1148_reg_389_pp0_iter84_reg;
        sdiv_ln1148_reg_389_pp0_iter86_reg <= sdiv_ln1148_reg_389_pp0_iter85_reg;
        sdiv_ln1148_reg_389_pp0_iter87_reg <= sdiv_ln1148_reg_389_pp0_iter86_reg;
        sdiv_ln1148_reg_389_pp0_iter88_reg <= sdiv_ln1148_reg_389_pp0_iter87_reg;
        sdiv_ln1148_reg_389_pp0_iter89_reg <= sdiv_ln1148_reg_389_pp0_iter88_reg;
        sdiv_ln1148_reg_389_pp0_iter90_reg <= sdiv_ln1148_reg_389_pp0_iter89_reg;
        sdiv_ln1148_reg_389_pp0_iter91_reg <= sdiv_ln1148_reg_389_pp0_iter90_reg;
        sdiv_ln1148_reg_389_pp0_iter92_reg <= sdiv_ln1148_reg_389_pp0_iter91_reg;
        sdiv_ln1148_reg_389_pp0_iter93_reg <= sdiv_ln1148_reg_389_pp0_iter92_reg;
        sdiv_ln1148_reg_389_pp0_iter94_reg <= sdiv_ln1148_reg_389_pp0_iter93_reg;
        sdiv_ln1148_reg_389_pp0_iter95_reg <= sdiv_ln1148_reg_389_pp0_iter94_reg;
        sdiv_ln1148_reg_389_pp0_iter96_reg <= sdiv_ln1148_reg_389_pp0_iter95_reg;
        sdiv_ln1148_reg_389_pp0_iter97_reg <= sdiv_ln1148_reg_389_pp0_iter96_reg;
        sdiv_ln1148_reg_389_pp0_iter98_reg <= sdiv_ln1148_reg_389_pp0_iter97_reg;
        sdiv_ln1148_reg_389_pp0_iter99_reg <= sdiv_ln1148_reg_389_pp0_iter98_reg;
        tmp_V_reg_368_pp0_iter100_reg <= tmp_V_reg_368_pp0_iter99_reg;
        tmp_V_reg_368_pp0_iter101_reg <= tmp_V_reg_368_pp0_iter100_reg;
        tmp_V_reg_368_pp0_iter102_reg <= tmp_V_reg_368_pp0_iter101_reg;
        tmp_V_reg_368_pp0_iter103_reg <= tmp_V_reg_368_pp0_iter102_reg;
        tmp_V_reg_368_pp0_iter104_reg <= tmp_V_reg_368_pp0_iter103_reg;
        tmp_V_reg_368_pp0_iter105_reg <= tmp_V_reg_368_pp0_iter104_reg;
        tmp_V_reg_368_pp0_iter106_reg <= tmp_V_reg_368_pp0_iter105_reg;
        tmp_V_reg_368_pp0_iter107_reg <= tmp_V_reg_368_pp0_iter106_reg;
        tmp_V_reg_368_pp0_iter108_reg <= tmp_V_reg_368_pp0_iter107_reg;
        tmp_V_reg_368_pp0_iter10_reg <= tmp_V_reg_368_pp0_iter9_reg;
        tmp_V_reg_368_pp0_iter11_reg <= tmp_V_reg_368_pp0_iter10_reg;
        tmp_V_reg_368_pp0_iter12_reg <= tmp_V_reg_368_pp0_iter11_reg;
        tmp_V_reg_368_pp0_iter13_reg <= tmp_V_reg_368_pp0_iter12_reg;
        tmp_V_reg_368_pp0_iter14_reg <= tmp_V_reg_368_pp0_iter13_reg;
        tmp_V_reg_368_pp0_iter15_reg <= tmp_V_reg_368_pp0_iter14_reg;
        tmp_V_reg_368_pp0_iter16_reg <= tmp_V_reg_368_pp0_iter15_reg;
        tmp_V_reg_368_pp0_iter17_reg <= tmp_V_reg_368_pp0_iter16_reg;
        tmp_V_reg_368_pp0_iter18_reg <= tmp_V_reg_368_pp0_iter17_reg;
        tmp_V_reg_368_pp0_iter19_reg <= tmp_V_reg_368_pp0_iter18_reg;
        tmp_V_reg_368_pp0_iter20_reg <= tmp_V_reg_368_pp0_iter19_reg;
        tmp_V_reg_368_pp0_iter21_reg <= tmp_V_reg_368_pp0_iter20_reg;
        tmp_V_reg_368_pp0_iter22_reg <= tmp_V_reg_368_pp0_iter21_reg;
        tmp_V_reg_368_pp0_iter23_reg <= tmp_V_reg_368_pp0_iter22_reg;
        tmp_V_reg_368_pp0_iter24_reg <= tmp_V_reg_368_pp0_iter23_reg;
        tmp_V_reg_368_pp0_iter25_reg <= tmp_V_reg_368_pp0_iter24_reg;
        tmp_V_reg_368_pp0_iter26_reg <= tmp_V_reg_368_pp0_iter25_reg;
        tmp_V_reg_368_pp0_iter27_reg <= tmp_V_reg_368_pp0_iter26_reg;
        tmp_V_reg_368_pp0_iter28_reg <= tmp_V_reg_368_pp0_iter27_reg;
        tmp_V_reg_368_pp0_iter29_reg <= tmp_V_reg_368_pp0_iter28_reg;
        tmp_V_reg_368_pp0_iter2_reg <= tmp_V_reg_368;
        tmp_V_reg_368_pp0_iter30_reg <= tmp_V_reg_368_pp0_iter29_reg;
        tmp_V_reg_368_pp0_iter31_reg <= tmp_V_reg_368_pp0_iter30_reg;
        tmp_V_reg_368_pp0_iter32_reg <= tmp_V_reg_368_pp0_iter31_reg;
        tmp_V_reg_368_pp0_iter33_reg <= tmp_V_reg_368_pp0_iter32_reg;
        tmp_V_reg_368_pp0_iter34_reg <= tmp_V_reg_368_pp0_iter33_reg;
        tmp_V_reg_368_pp0_iter35_reg <= tmp_V_reg_368_pp0_iter34_reg;
        tmp_V_reg_368_pp0_iter36_reg <= tmp_V_reg_368_pp0_iter35_reg;
        tmp_V_reg_368_pp0_iter37_reg <= tmp_V_reg_368_pp0_iter36_reg;
        tmp_V_reg_368_pp0_iter38_reg <= tmp_V_reg_368_pp0_iter37_reg;
        tmp_V_reg_368_pp0_iter39_reg <= tmp_V_reg_368_pp0_iter38_reg;
        tmp_V_reg_368_pp0_iter3_reg <= tmp_V_reg_368_pp0_iter2_reg;
        tmp_V_reg_368_pp0_iter40_reg <= tmp_V_reg_368_pp0_iter39_reg;
        tmp_V_reg_368_pp0_iter41_reg <= tmp_V_reg_368_pp0_iter40_reg;
        tmp_V_reg_368_pp0_iter42_reg <= tmp_V_reg_368_pp0_iter41_reg;
        tmp_V_reg_368_pp0_iter43_reg <= tmp_V_reg_368_pp0_iter42_reg;
        tmp_V_reg_368_pp0_iter44_reg <= tmp_V_reg_368_pp0_iter43_reg;
        tmp_V_reg_368_pp0_iter45_reg <= tmp_V_reg_368_pp0_iter44_reg;
        tmp_V_reg_368_pp0_iter46_reg <= tmp_V_reg_368_pp0_iter45_reg;
        tmp_V_reg_368_pp0_iter47_reg <= tmp_V_reg_368_pp0_iter46_reg;
        tmp_V_reg_368_pp0_iter48_reg <= tmp_V_reg_368_pp0_iter47_reg;
        tmp_V_reg_368_pp0_iter49_reg <= tmp_V_reg_368_pp0_iter48_reg;
        tmp_V_reg_368_pp0_iter4_reg <= tmp_V_reg_368_pp0_iter3_reg;
        tmp_V_reg_368_pp0_iter50_reg <= tmp_V_reg_368_pp0_iter49_reg;
        tmp_V_reg_368_pp0_iter51_reg <= tmp_V_reg_368_pp0_iter50_reg;
        tmp_V_reg_368_pp0_iter52_reg <= tmp_V_reg_368_pp0_iter51_reg;
        tmp_V_reg_368_pp0_iter53_reg <= tmp_V_reg_368_pp0_iter52_reg;
        tmp_V_reg_368_pp0_iter54_reg <= tmp_V_reg_368_pp0_iter53_reg;
        tmp_V_reg_368_pp0_iter55_reg <= tmp_V_reg_368_pp0_iter54_reg;
        tmp_V_reg_368_pp0_iter56_reg <= tmp_V_reg_368_pp0_iter55_reg;
        tmp_V_reg_368_pp0_iter57_reg <= tmp_V_reg_368_pp0_iter56_reg;
        tmp_V_reg_368_pp0_iter58_reg <= tmp_V_reg_368_pp0_iter57_reg;
        tmp_V_reg_368_pp0_iter59_reg <= tmp_V_reg_368_pp0_iter58_reg;
        tmp_V_reg_368_pp0_iter5_reg <= tmp_V_reg_368_pp0_iter4_reg;
        tmp_V_reg_368_pp0_iter60_reg <= tmp_V_reg_368_pp0_iter59_reg;
        tmp_V_reg_368_pp0_iter61_reg <= tmp_V_reg_368_pp0_iter60_reg;
        tmp_V_reg_368_pp0_iter62_reg <= tmp_V_reg_368_pp0_iter61_reg;
        tmp_V_reg_368_pp0_iter63_reg <= tmp_V_reg_368_pp0_iter62_reg;
        tmp_V_reg_368_pp0_iter64_reg <= tmp_V_reg_368_pp0_iter63_reg;
        tmp_V_reg_368_pp0_iter65_reg <= tmp_V_reg_368_pp0_iter64_reg;
        tmp_V_reg_368_pp0_iter66_reg <= tmp_V_reg_368_pp0_iter65_reg;
        tmp_V_reg_368_pp0_iter67_reg <= tmp_V_reg_368_pp0_iter66_reg;
        tmp_V_reg_368_pp0_iter68_reg <= tmp_V_reg_368_pp0_iter67_reg;
        tmp_V_reg_368_pp0_iter69_reg <= tmp_V_reg_368_pp0_iter68_reg;
        tmp_V_reg_368_pp0_iter6_reg <= tmp_V_reg_368_pp0_iter5_reg;
        tmp_V_reg_368_pp0_iter70_reg <= tmp_V_reg_368_pp0_iter69_reg;
        tmp_V_reg_368_pp0_iter71_reg <= tmp_V_reg_368_pp0_iter70_reg;
        tmp_V_reg_368_pp0_iter72_reg <= tmp_V_reg_368_pp0_iter71_reg;
        tmp_V_reg_368_pp0_iter73_reg <= tmp_V_reg_368_pp0_iter72_reg;
        tmp_V_reg_368_pp0_iter74_reg <= tmp_V_reg_368_pp0_iter73_reg;
        tmp_V_reg_368_pp0_iter75_reg <= tmp_V_reg_368_pp0_iter74_reg;
        tmp_V_reg_368_pp0_iter76_reg <= tmp_V_reg_368_pp0_iter75_reg;
        tmp_V_reg_368_pp0_iter77_reg <= tmp_V_reg_368_pp0_iter76_reg;
        tmp_V_reg_368_pp0_iter78_reg <= tmp_V_reg_368_pp0_iter77_reg;
        tmp_V_reg_368_pp0_iter79_reg <= tmp_V_reg_368_pp0_iter78_reg;
        tmp_V_reg_368_pp0_iter7_reg <= tmp_V_reg_368_pp0_iter6_reg;
        tmp_V_reg_368_pp0_iter80_reg <= tmp_V_reg_368_pp0_iter79_reg;
        tmp_V_reg_368_pp0_iter81_reg <= tmp_V_reg_368_pp0_iter80_reg;
        tmp_V_reg_368_pp0_iter82_reg <= tmp_V_reg_368_pp0_iter81_reg;
        tmp_V_reg_368_pp0_iter83_reg <= tmp_V_reg_368_pp0_iter82_reg;
        tmp_V_reg_368_pp0_iter84_reg <= tmp_V_reg_368_pp0_iter83_reg;
        tmp_V_reg_368_pp0_iter85_reg <= tmp_V_reg_368_pp0_iter84_reg;
        tmp_V_reg_368_pp0_iter86_reg <= tmp_V_reg_368_pp0_iter85_reg;
        tmp_V_reg_368_pp0_iter87_reg <= tmp_V_reg_368_pp0_iter86_reg;
        tmp_V_reg_368_pp0_iter88_reg <= tmp_V_reg_368_pp0_iter87_reg;
        tmp_V_reg_368_pp0_iter89_reg <= tmp_V_reg_368_pp0_iter88_reg;
        tmp_V_reg_368_pp0_iter8_reg <= tmp_V_reg_368_pp0_iter7_reg;
        tmp_V_reg_368_pp0_iter90_reg <= tmp_V_reg_368_pp0_iter89_reg;
        tmp_V_reg_368_pp0_iter91_reg <= tmp_V_reg_368_pp0_iter90_reg;
        tmp_V_reg_368_pp0_iter92_reg <= tmp_V_reg_368_pp0_iter91_reg;
        tmp_V_reg_368_pp0_iter93_reg <= tmp_V_reg_368_pp0_iter92_reg;
        tmp_V_reg_368_pp0_iter94_reg <= tmp_V_reg_368_pp0_iter93_reg;
        tmp_V_reg_368_pp0_iter95_reg <= tmp_V_reg_368_pp0_iter94_reg;
        tmp_V_reg_368_pp0_iter96_reg <= tmp_V_reg_368_pp0_iter95_reg;
        tmp_V_reg_368_pp0_iter97_reg <= tmp_V_reg_368_pp0_iter96_reg;
        tmp_V_reg_368_pp0_iter98_reg <= tmp_V_reg_368_pp0_iter97_reg;
        tmp_V_reg_368_pp0_iter99_reg <= tmp_V_reg_368_pp0_iter98_reg;
        tmp_V_reg_368_pp0_iter9_reg <= tmp_V_reg_368_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_359_pp0_iter51_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mean_I_V_reg_394 <= mean_I_V_fu_164_p1;
        sdiv_ln1148_1_reg_399 <= grp_fu_158_p2;
        sdiv_ln1148_reg_389 <= grp_fu_144_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_359_pp0_iter106_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        my_a_V_reg_435 <= my_a_V_fu_275_p1;
        r_V_6_reg_440 <= r_V_6_fu_282_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_359_pp0_iter53_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_22_reg_414 <= p_Val2_22_fu_243_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_359_pp0_iter107_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_s_reg_445 <= p_Val2_s_fu_353_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_359_pp0_iter52_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_V_5_reg_409 <= r_V_5_fu_171_p2;
        r_V_reg_404 <= r_V_fu_168_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_359_pp0_iter105_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sdiv_ln1148_2_reg_430 <= grp_fu_269_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_359 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_V_reg_368 <= N_V_V_dout;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_359_pp0_iter108_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter109 == 1'b1))) begin
        N_COPY_V_V_blk_n = N_COPY_V_V_full_n;
    end else begin
        N_COPY_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_359_pp0_iter108_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter109 == 1'b1))) begin
        N_COPY_V_V_write = 1'b1;
    end else begin
        N_COPY_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_359 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        N_V_V_blk_n = N_V_V_empty_n;
    end else begin
        N_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_359 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        N_V_V_read = 1'b1;
    end else begin
        N_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_359_pp0_iter108_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter109 == 1'b1))) begin
        a_V_V_blk_n = a_V_V_full_n;
    end else begin
        a_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_359_pp0_iter108_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter109 == 1'b1))) begin
        a_V_V_write = 1'b1;
    end else begin
        a_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln887_fu_120_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter108 == 1'b0) & (ap_enable_reg_pp0_iter107 == 1'b0) & (ap_enable_reg_pp0_iter106 == 1'b0) & (ap_enable_reg_pp0_iter105 == 1'b0) & (ap_enable_reg_pp0_iter104 == 1'b0) & (ap_enable_reg_pp0_iter103 == 1'b0) & (ap_enable_reg_pp0_iter102 == 1'b0) & (ap_enable_reg_pp0_iter101 == 1'b0) & (ap_enable_reg_pp0_iter100 == 1'b0) & (ap_enable_reg_pp0_iter99 == 1'b0) & (ap_enable_reg_pp0_iter98 == 1'b0) & (ap_enable_reg_pp0_iter97 == 1'b0) & (ap_enable_reg_pp0_iter96 == 1'b0) & (ap_enable_reg_pp0_iter95 == 1'b0) & (ap_enable_reg_pp0_iter94 == 1'b0) & (ap_enable_reg_pp0_iter93 == 1'b0) & (ap_enable_reg_pp0_iter92 == 1'b0) & (ap_enable_reg_pp0_iter91 == 1'b0) & (ap_enable_reg_pp0_iter90 == 1'b0) & (ap_enable_reg_pp0_iter89 == 1'b0) & (ap_enable_reg_pp0_iter88 == 1'b0) & (ap_enable_reg_pp0_iter87 == 1'b0) & (ap_enable_reg_pp0_iter86 == 1'b0) & (ap_enable_reg_pp0_iter85 == 1'b0) & (ap_enable_reg_pp0_iter84 == 1'b0) & (ap_enable_reg_pp0_iter83 == 1'b0) & (ap_enable_reg_pp0_iter82 == 1'b0) & (ap_enable_reg_pp0_iter81 == 1'b0) & (ap_enable_reg_pp0_iter80 == 1'b0) & (ap_enable_reg_pp0_iter79 == 1'b0) & (ap_enable_reg_pp0_iter78 == 1'b0) & (ap_enable_reg_pp0_iter77 == 1'b0) & (ap_enable_reg_pp0_iter76 == 1'b0) & (ap_enable_reg_pp0_iter75 == 1'b0) & (ap_enable_reg_pp0_iter74 == 1'b0) & (ap_enable_reg_pp0_iter73 == 1'b0) & (ap_enable_reg_pp0_iter72 == 1'b0) & (ap_enable_reg_pp0_iter71 == 1'b0) & (ap_enable_reg_pp0_iter70 == 1'b0) & (ap_enable_reg_pp0_iter69 == 1'b0) & (ap_enable_reg_pp0_iter68 == 1'b0) & (ap_enable_reg_pp0_iter67 == 1'b0) & (ap_enable_reg_pp0_iter66 == 1'b0) & (ap_enable_reg_pp0_iter65 == 1'b0) & (ap_enable_reg_pp0_iter64 == 1'b0) & (ap_enable_reg_pp0_iter63 == 1'b0) & (ap_enable_reg_pp0_iter62 == 1'b0) & (ap_enable_reg_pp0_iter61 == 1'b0) & (ap_enable_reg_pp0_iter60 == 1'b0) & (ap_enable_reg_pp0_iter59 == 1'b0) & (ap_enable_reg_pp0_iter58 == 1'b0) & (ap_enable_reg_pp0_iter57 == 1'b0) & (ap_enable_reg_pp0_iter56 == 1'b0) & (ap_enable_reg_pp0_iter55 == 1'b0) & (ap_enable_reg_pp0_iter54 == 1'b0) & (ap_enable_reg_pp0_iter53 == 1'b0) & (ap_enable_reg_pp0_iter52 == 1'b0) & (ap_enable_reg_pp0_iter51 == 1'b0) & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter109 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_359_pp0_iter108_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter109 == 1'b1))) begin
        b_V_V_blk_n = b_V_V_full_n;
    end else begin
        b_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_359_pp0_iter108_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter109 == 1'b1))) begin
        b_V_V_write = 1'b1;
    end else begin
        b_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_144_ce = 1'b1;
    end else begin
        grp_fu_144_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_158_ce = 1'b1;
    end else begin
        grp_fu_158_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_269_ce = 1'b1;
    end else begin
        grp_fu_269_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_359 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mean_II_V_V_blk_n = mean_II_V_V_empty_n;
    end else begin
        mean_II_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_359 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mean_II_V_V_read = 1'b1;
    end else begin
        mean_II_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_359 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mean_I_V_V_blk_n = mean_I_V_V_empty_n;
    end else begin
        mean_I_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_359 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mean_I_V_V_read = 1'b1;
    end else begin
        mean_I_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln887_fu_120_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter108 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter109 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter108 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter109 == 1'b1)) | ((icmp_ln887_fu_120_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state112;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign N_COPY_V_V_din = tmp_V_reg_368_pp0_iter108_reg;

assign a_V_V_din = my_a_V_reg_435_pp0_iter108_reg;

assign add_ln887_fu_126_p2 = (indvar_flatten_reg_109 + 17'd1);

assign and_ln412_1_fu_343_p2 = (tmp_27_fu_335_p3 & or_ln412_1_fu_329_p2);

assign and_ln412_fu_233_p2 = (tmp_25_fu_225_p3 & or_ln412_fu_219_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter109 == 1'b1) & (((icmp_ln887_reg_359_pp0_iter108_reg == 1'd0) & (b_V_V_full_n == 1'b0)) | ((icmp_ln887_reg_359_pp0_iter108_reg == 1'd0) & (1'b0 == a_V_V_full_n)) | ((icmp_ln887_reg_359_pp0_iter108_reg == 1'd0) & (1'b0 == N_COPY_V_V_full_n)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln887_reg_359 == 1'd0) & (mean_I_V_V_empty_n == 1'b0)) | ((icmp_ln887_reg_359 == 1'd0) & (1'b0 == N_V_V_empty_n)) | ((icmp_ln887_reg_359 == 1'd0) & (mean_II_V_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter109 == 1'b1) & (((icmp_ln887_reg_359_pp0_iter108_reg == 1'd0) & (b_V_V_full_n == 1'b0)) | ((icmp_ln887_reg_359_pp0_iter108_reg == 1'd0) & (1'b0 == a_V_V_full_n)) | ((icmp_ln887_reg_359_pp0_iter108_reg == 1'd0) & (1'b0 == N_COPY_V_V_full_n)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln887_reg_359 == 1'd0) & (mean_I_V_V_empty_n == 1'b0)) | ((icmp_ln887_reg_359 == 1'd0) & (1'b0 == N_V_V_empty_n)) | ((icmp_ln887_reg_359 == 1'd0) & (mean_II_V_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter109 == 1'b1) & (((icmp_ln887_reg_359_pp0_iter108_reg == 1'd0) & (b_V_V_full_n == 1'b0)) | ((icmp_ln887_reg_359_pp0_iter108_reg == 1'd0) & (1'b0 == a_V_V_full_n)) | ((icmp_ln887_reg_359_pp0_iter108_reg == 1'd0) & (1'b0 == N_COPY_V_V_full_n)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln887_reg_359 == 1'd0) & (mean_I_V_V_empty_n == 1'b0)) | ((icmp_ln887_reg_359 == 1'd0) & (1'b0 == N_V_V_empty_n)) | ((icmp_ln887_reg_359 == 1'd0) & (mean_II_V_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state100_pp0_stage0_iter98 = ~(1'b1 == 1'b1);

assign ap_block_state101_pp0_stage0_iter99 = ~(1'b1 == 1'b1);

assign ap_block_state102_pp0_stage0_iter100 = ~(1'b1 == 1'b1);

assign ap_block_state103_pp0_stage0_iter101 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp0_stage0_iter102 = ~(1'b1 == 1'b1);

assign ap_block_state105_pp0_stage0_iter103 = ~(1'b1 == 1'b1);

assign ap_block_state106_pp0_stage0_iter104 = ~(1'b1 == 1'b1);

assign ap_block_state107_pp0_stage0_iter105 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp0_stage0_iter106 = ~(1'b1 == 1'b1);

assign ap_block_state109_pp0_stage0_iter107 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state110_pp0_stage0_iter108 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state111_pp0_stage0_iter109 = (((icmp_ln887_reg_359_pp0_iter108_reg == 1'd0) & (b_V_V_full_n == 1'b0)) | ((icmp_ln887_reg_359_pp0_iter108_reg == 1'd0) & (1'b0 == a_V_V_full_n)) | ((icmp_ln887_reg_359_pp0_iter108_reg == 1'd0) & (1'b0 == N_COPY_V_V_full_n)));
end

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (((icmp_ln887_reg_359 == 1'd0) & (mean_I_V_V_empty_n == 1'b0)) | ((icmp_ln887_reg_359 == 1'd0) & (1'b0 == N_V_V_empty_n)) | ((icmp_ln887_reg_359 == 1'd0) & (mean_II_V_V_empty_n == 1'b0)));
end

assign ap_block_state40_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter48 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter49 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter50 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter51 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage0_iter52 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter53 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage0_iter54 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter55 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage0_iter56 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage0_iter57 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage0_iter58 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter59 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage0_iter60 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage0_iter61 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage0_iter62 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage0_iter63 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage0_iter64 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage0_iter65 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage0_iter66 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage0_iter67 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage0_iter68 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage0_iter69 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage0_iter70 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage0_iter71 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage0_iter72 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage0_iter73 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage0_iter74 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage0_iter75 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage0_iter76 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp0_stage0_iter77 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage0_iter78 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp0_stage0_iter79 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp0_stage0_iter80 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp0_stage0_iter81 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp0_stage0_iter82 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp0_stage0_iter83 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp0_stage0_iter84 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp0_stage0_iter85 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp0_stage0_iter86 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp0_stage0_iter87 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp0_stage0_iter88 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp0_stage0_iter89 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp0_stage0_iter90 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp0_stage0_iter91 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp0_stage0_iter92 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp0_stage0_iter93 = ~(1'b1 == 1'b1);

assign ap_block_state96_pp0_stage0_iter94 = ~(1'b1 == 1'b1);

assign ap_block_state97_pp0_stage0_iter95 = ~(1'b1 == 1'b1);

assign ap_block_state98_pp0_stage0_iter96 = ~(1'b1 == 1'b1);

assign ap_block_state99_pp0_stage0_iter97 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign b_V_V_din = p_Val2_s_reg_445;

assign grp_fu_144_p0 = {{mean_I_V_V_dout}, {16'd0}};

assign grp_fu_144_p1 = sext_ln1148_fu_140_p1;

assign grp_fu_158_p0 = {{mean_II_V_V_dout}, {16'd0}};

assign grp_fu_158_p1 = sext_ln1148_fu_140_p1;

assign grp_fu_269_p0 = {{p_Val2_22_reg_414}, {16'd0}};

assign icmp_ln887_fu_120_p2 = ((indvar_flatten_reg_109 == 17'd129600) ? 1'b1 : 1'b0);

assign lhs_V_2_fu_249_p1 = p_Val2_22_reg_414;

assign lhs_V_3_fu_287_p2 = sdiv_ln1148_reg_389_pp0_iter107_reg << 48'd16;

assign lhs_V_fu_177_p2 = sdiv_ln1148_1_reg_399_pp0_iter53_reg << 48'd16;

assign mean_I_V_fu_164_p1 = grp_fu_144_p2[31:0];

assign my_a_V_fu_275_p1 = sdiv_ln1148_2_reg_430[31:0];

assign or_ln412_1_fu_329_p2 = (tmp_26_fu_311_p3 | r_2_fu_323_p2);

assign or_ln412_fu_219_p2 = (tmp_fu_201_p3 | r_fu_213_p2);

assign p_Val2_20_fu_191_p4 = {{ret_V_11_fu_186_p2[47:16]}};

assign p_Val2_22_fu_243_p2 = (p_Val2_20_fu_191_p4 + zext_ln412_fu_239_p1);

assign p_Val2_26_fu_301_p4 = {{ret_V_12_fu_296_p2[47:16]}};

assign p_Val2_s_fu_353_p2 = (p_Val2_26_fu_301_p4 + zext_ln412_1_fu_349_p1);

assign r_2_fu_323_p2 = ((trunc_ln718_1_fu_319_p1 != 15'd0) ? 1'b1 : 1'b0);

assign r_V_5_fu_171_p0 = r_V_fu_168_p1;

assign r_V_5_fu_171_p1 = r_V_fu_168_p1;

assign r_V_5_fu_171_p2 = ($signed(r_V_5_fu_171_p0) * $signed(r_V_5_fu_171_p1));

assign r_V_6_fu_282_p0 = my_a_V_fu_275_p1;

assign r_V_6_fu_282_p1 = r_V_reg_404_pp0_iter106_reg;

assign r_V_6_fu_282_p2 = ($signed(r_V_6_fu_282_p0) * $signed(r_V_6_fu_282_p1));

assign r_V_fu_168_p1 = $signed(mean_I_V_reg_394);

assign r_fu_213_p2 = ((trunc_ln718_fu_209_p1 != 15'd0) ? 1'b1 : 1'b0);

assign ret_V_11_fu_186_p2 = ($signed(sext_ln728_fu_182_p1) - $signed(r_V_5_reg_409));

assign ret_V_12_fu_296_p2 = ($signed(sext_ln728_1_fu_292_p1) - $signed(r_V_6_reg_440));

assign ret_V_fu_252_p2 = ($signed(33'd655) + $signed(lhs_V_2_fu_249_p1));

assign sext_ln1148_fu_140_p0 = N_V_V_dout;

assign sext_ln1148_fu_140_p1 = sext_ln1148_fu_140_p0;

assign sext_ln728_1_fu_292_p1 = $signed(lhs_V_3_fu_287_p2);

assign sext_ln728_fu_182_p1 = $signed(lhs_V_fu_177_p2);

assign start_out = real_start;

assign tmp_25_fu_225_p3 = ret_V_11_fu_186_p2[32'd15];

assign tmp_26_fu_311_p3 = ret_V_12_fu_296_p2[32'd16];

assign tmp_27_fu_335_p3 = ret_V_12_fu_296_p2[32'd15];

assign tmp_fu_201_p3 = ret_V_11_fu_186_p2[32'd16];

assign trunc_ln718_1_fu_319_p1 = ret_V_12_fu_296_p2[14:0];

assign trunc_ln718_fu_209_p1 = ret_V_11_fu_186_p2[14:0];

assign zext_ln412_1_fu_349_p1 = and_ln412_1_fu_343_p2;

assign zext_ln412_fu_239_p1 = and_ln412_fu_233_p2;

endmodule //compute_a_b208
